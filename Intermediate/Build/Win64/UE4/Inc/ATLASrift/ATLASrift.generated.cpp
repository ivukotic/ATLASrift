// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ATLASrift.h"
#include "ATLASrift.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeATLASrift() {}
	void ACluster::StaticRegisterNativesACluster()
	{
	}
	IMPLEMENT_CLASS(ACluster, 3972018700);
	void ATrack::StaticRegisterNativesATrack()
	{
	}
	IMPLEMENT_CLASS(ATrack, 2957434461);
class UScriptStruct* FEventState::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ATLASRIFT_API class UScriptStruct* Z_Construct_UScriptStruct_FEventState();
		extern ATLASRIFT_API uint32 Get_Z_Construct_UScriptStruct_FEventState_CRC();
		extern ATLASRIFT_API class UPackage* Z_Construct_UPackage_ATLASrift();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEventState, Z_Construct_UPackage_ATLASrift(), TEXT("EventState"), sizeof(FEventState), Get_Z_Construct_UScriptStruct_FEventState_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEventState(FEventState::StaticStruct, TEXT("/Script/ATLASrift"));
static struct FScriptStruct_ATLASrift_StaticRegisterNativesFEventState
{
	FScriptStruct_ATLASrift_StaticRegisterNativesFEventState()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EventState")),new UScriptStruct::TCppStructOps<FEventState>);
	}
} ScriptStruct_ATLASrift_StaticRegisterNativesFEventState;
	void AEvent::onEventDownloaded()
	{
		ProcessEvent(FindFunctionChecked(ATLASRIFT_onEventDownloaded),NULL);
	}
	void AEvent::StaticRegisterNativesAEvent()
	{
		FNativeFunctionRegistrar::RegisterFunction(AEvent::StaticClass(),"Add4Points",(Native)&AEvent::execAdd4Points);
		FNativeFunctionRegistrar::RegisterFunction(AEvent::StaticClass(),"AddTris",(Native)&AEvent::execAddTris);
		FNativeFunctionRegistrar::RegisterFunction(AEvent::StaticClass(),"GetDescription",(Native)&AEvent::execGetDescription);
		FNativeFunctionRegistrar::RegisterFunction(AEvent::StaticClass(),"GetEvent",(Native)&AEvent::execGetEvent);
		FNativeFunctionRegistrar::RegisterFunction(AEvent::StaticClass(),"GetEventNr",(Native)&AEvent::execGetEventNr);
		FNativeFunctionRegistrar::RegisterFunction(AEvent::StaticClass(),"GetRunNr",(Native)&AEvent::execGetRunNr);
		FNativeFunctionRegistrar::RegisterFunction(AEvent::StaticClass(),"GetTethaFromEta",(Native)&AEvent::execGetTethaFromEta);
		FNativeFunctionRegistrar::RegisterFunction(AEvent::StaticClass(),"ShowClustersFunc",(Native)&AEvent::execShowClustersFunc);
		FNativeFunctionRegistrar::RegisterFunction(AEvent::StaticClass(),"ShowTracksFunc",(Native)&AEvent::execShowTracksFunc);
	}
	IMPLEMENT_CLASS(AEvent, 1853322490);
	void AJet::StaticRegisterNativesAJet()
	{
	}
	IMPLEMENT_CLASS(AJet, 1421170759);
	void UMyProceduralMeshComponent::StaticRegisterNativesUMyProceduralMeshComponent()
	{
	}
	IMPLEMENT_CLASS(UMyProceduralMeshComponent, 911210440);
class UScriptStruct* FNetServer::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ATLASRIFT_API class UScriptStruct* Z_Construct_UScriptStruct_FNetServer();
		extern ATLASRIFT_API uint32 Get_Z_Construct_UScriptStruct_FNetServer_CRC();
		extern ATLASRIFT_API class UPackage* Z_Construct_UPackage_ATLASrift();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNetServer, Z_Construct_UPackage_ATLASrift(), TEXT("NetServer"), sizeof(FNetServer), Get_Z_Construct_UScriptStruct_FNetServer_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNetServer(FNetServer::StaticStruct, TEXT("/Script/ATLASrift"));
static struct FScriptStruct_ATLASrift_StaticRegisterNativesFNetServer
{
	FScriptStruct_ATLASrift_StaticRegisterNativesFNetServer()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NetServer")),new UScriptStruct::TCppStructOps<FNetServer>);
	}
} ScriptStruct_ATLASrift_StaticRegisterNativesFNetServer;
	void UReporter::StaticRegisterNativesUReporter()
	{
		FNativeFunctionRegistrar::RegisterFunction(UReporter::StaticClass(),"HostAServer",(Native)&UReporter::execHostAServer);
		FNativeFunctionRegistrar::RegisterFunction(UReporter::StaticClass(),"KeepAliveUDP",(Native)&UReporter::execKeepAliveUDP);
		FNativeFunctionRegistrar::RegisterFunction(UReporter::StaticClass(),"LoadNetServers",(Native)&UReporter::execLoadNetServers);
		FNativeFunctionRegistrar::RegisterFunction(UReporter::StaticClass(),"StartWork",(Native)&UReporter::execStartWork);
		FNativeFunctionRegistrar::RegisterFunction(UReporter::StaticClass(),"StopWork",(Native)&UReporter::execStopWork);
	}
	IMPLEMENT_CLASS(UReporter, 836980758);
FName ATLASRIFT_onEventDownloaded = FName(TEXT("onEventDownloaded"));
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	PROCEDURALMESHCOMPONENT_API class UScriptStruct* Z_Construct_UScriptStruct_FProcMeshTangent();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FColor();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterial_NoRegister();
	PROCEDURALMESHCOMPONENT_API class UClass* Z_Construct_UClass_UProceduralMeshComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();

	ATLASRIFT_API class UClass* Z_Construct_UClass_ACluster_NoRegister();
	ATLASRIFT_API class UClass* Z_Construct_UClass_ACluster();
	ATLASRIFT_API class UClass* Z_Construct_UClass_ATrack_NoRegister();
	ATLASRIFT_API class UClass* Z_Construct_UClass_ATrack();
	ATLASRIFT_API class UScriptStruct* Z_Construct_UScriptStruct_FEventState();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_AEvent_Add4Points();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_AEvent_AddTris();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_AEvent_GetDescription();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_AEvent_GetEvent();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_AEvent_GetEventNr();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_AEvent_GetRunNr();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_AEvent_GetTethaFromEta();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_AEvent_onEventDownloaded();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_AEvent_ShowClustersFunc();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_AEvent_ShowTracksFunc();
	ATLASRIFT_API class UClass* Z_Construct_UClass_AEvent_NoRegister();
	ATLASRIFT_API class UClass* Z_Construct_UClass_AEvent();
	ATLASRIFT_API class UClass* Z_Construct_UClass_AJet_NoRegister();
	ATLASRIFT_API class UClass* Z_Construct_UClass_AJet();
	ATLASRIFT_API class UClass* Z_Construct_UClass_UMyProceduralMeshComponent_NoRegister();
	ATLASRIFT_API class UClass* Z_Construct_UClass_UMyProceduralMeshComponent();
	ATLASRIFT_API class UScriptStruct* Z_Construct_UScriptStruct_FNetServer();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_UReporter_HostAServer();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_UReporter_KeepAliveUDP();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_UReporter_LoadNetServers();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_UReporter_StartWork();
	ATLASRIFT_API class UFunction* Z_Construct_UFunction_UReporter_StopWork();
	ATLASRIFT_API class UClass* Z_Construct_UClass_UReporter_NoRegister();
	ATLASRIFT_API class UClass* Z_Construct_UClass_UReporter();
	ATLASRIFT_API class UPackage* Z_Construct_UPackage_ATLASrift();
	UClass* Z_Construct_UClass_ACluster_NoRegister()
	{
		return ACluster::StaticClass();
	}
	UClass* Z_Construct_UClass_ACluster()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_ATLASrift();
			OuterClass = ACluster::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_energy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("energy"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(energy, ACluster), 0x0000000000000014);
				UProperty* NewProp_eta = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("eta"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(eta, ACluster), 0x0000000000000014);
				UProperty* NewProp_theta = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("theta"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(theta, ACluster), 0x0000000000000014);
				UProperty* NewProp_phi = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("phi"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(phi, ACluster), 0x0000000000000014);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Cluster.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Cluster.h"));
				MetaData->SetValue(NewProp_energy, TEXT("Category"), TEXT("Cluster Parameters"));
				MetaData->SetValue(NewProp_energy, TEXT("ModuleRelativePath"), TEXT("Cluster.h"));
				MetaData->SetValue(NewProp_eta, TEXT("Category"), TEXT("Cluster Parameters"));
				MetaData->SetValue(NewProp_eta, TEXT("ModuleRelativePath"), TEXT("Cluster.h"));
				MetaData->SetValue(NewProp_theta, TEXT("Category"), TEXT("Cluster Parameters"));
				MetaData->SetValue(NewProp_theta, TEXT("ModuleRelativePath"), TEXT("Cluster.h"));
				MetaData->SetValue(NewProp_phi, TEXT("Category"), TEXT("Cluster Parameters"));
				MetaData->SetValue(NewProp_phi, TEXT("ModuleRelativePath"), TEXT("Cluster.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACluster(Z_Construct_UClass_ACluster, TEXT("ACluster"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACluster);
	UClass* Z_Construct_UClass_ATrack_NoRegister()
	{
		return ATrack::StaticClass();
	}
	UClass* Z_Construct_UClass_ATrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_ATLASrift();
			OuterClass = ATrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_points = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("points"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(points, ATrack), 0x0000000000000014);
				UProperty* NewProp_points_Inner = new(EC_InternalUseOnlyConstructor, NewProp_points, TEXT("points"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_qop = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("qop"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(qop, ATrack), 0x0000000000000014);
				UProperty* NewProp_theta = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("theta"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(theta, ATrack), 0x0000000000000014);
				UProperty* NewProp_phi = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("phi"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(phi, ATrack), 0x0000000000000014);
				UProperty* NewProp_z0 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("z0"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(z0, ATrack), 0x0000000000000014);
				UProperty* NewProp_d0 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("d0"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(d0, ATrack), 0x0000000000000014);
				UProperty* NewProp_chi2 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("chi2"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(chi2, ATrack), 0x0000000000000014);
				UProperty* NewProp_dof = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("dof"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(dof, ATrack), 0x0000000000000014);
				UProperty* NewProp_type = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("type"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(type, ATrack), 0x0000000000000014);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Track.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Track.h"));
				MetaData->SetValue(NewProp_points, TEXT("Category"), TEXT("Track Parameters"));
				MetaData->SetValue(NewProp_points, TEXT("ModuleRelativePath"), TEXT("Track.h"));
				MetaData->SetValue(NewProp_qop, TEXT("Category"), TEXT("Track Parameters"));
				MetaData->SetValue(NewProp_qop, TEXT("ModuleRelativePath"), TEXT("Track.h"));
				MetaData->SetValue(NewProp_theta, TEXT("Category"), TEXT("Track Parameters"));
				MetaData->SetValue(NewProp_theta, TEXT("ModuleRelativePath"), TEXT("Track.h"));
				MetaData->SetValue(NewProp_phi, TEXT("Category"), TEXT("Track Parameters"));
				MetaData->SetValue(NewProp_phi, TEXT("ModuleRelativePath"), TEXT("Track.h"));
				MetaData->SetValue(NewProp_z0, TEXT("Category"), TEXT("Track Parameters"));
				MetaData->SetValue(NewProp_z0, TEXT("ModuleRelativePath"), TEXT("Track.h"));
				MetaData->SetValue(NewProp_d0, TEXT("Category"), TEXT("Track Parameters"));
				MetaData->SetValue(NewProp_d0, TEXT("ModuleRelativePath"), TEXT("Track.h"));
				MetaData->SetValue(NewProp_chi2, TEXT("Category"), TEXT("Track Parameters"));
				MetaData->SetValue(NewProp_chi2, TEXT("ModuleRelativePath"), TEXT("Track.h"));
				MetaData->SetValue(NewProp_dof, TEXT("Category"), TEXT("Track Parameters"));
				MetaData->SetValue(NewProp_dof, TEXT("ModuleRelativePath"), TEXT("Track.h"));
				MetaData->SetValue(NewProp_type, TEXT("Category"), TEXT("Track Parameters"));
				MetaData->SetValue(NewProp_type, TEXT("ModuleRelativePath"), TEXT("Track.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ATrack(Z_Construct_UClass_ATrack, TEXT("ATrack"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ATrack);
	UScriptStruct* Z_Construct_UScriptStruct_FEventState()
	{
		UPackage* Outer=Z_Construct_UPackage_ATLASrift();
		extern uint32 Get_Z_Construct_UScriptStruct_FEventState_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("EventState"), sizeof(FEventState), Get_Z_Construct_UScriptStruct_FEventState_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EventState"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEventState>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ChangeToNextEvent, FEventState, bool);
			UProperty* NewProp_ChangeToNextEvent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChangeToNextEvent"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ChangeToNextEvent, FEventState), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(ChangeToNextEvent, FEventState), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ChangeToPreviousEvent, FEventState, bool);
			UProperty* NewProp_ChangeToPreviousEvent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChangeToPreviousEvent"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ChangeToPreviousEvent, FEventState), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(ChangeToPreviousEvent, FEventState), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(AutoReload, FEventState, bool);
			UProperty* NewProp_AutoReload = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AutoReload"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AutoReload, FEventState), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(AutoReload, FEventState), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ShowClusters, FEventState, bool);
			UProperty* NewProp_ShowClusters = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShowClusters"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ShowClusters, FEventState), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(ShowClusters, FEventState), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ShowJets, FEventState, bool);
			UProperty* NewProp_ShowJets = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShowJets"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ShowJets, FEventState), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(ShowJets, FEventState), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ShowTracks, FEventState, bool);
			UProperty* NewProp_ShowTracks = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShowTracks"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ShowTracks, FEventState), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(ShowTracks, FEventState), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Event.h"));
			MetaData->SetValue(NewProp_ChangeToNextEvent, TEXT("Category"), TEXT("Variables"));
			MetaData->SetValue(NewProp_ChangeToNextEvent, TEXT("ModuleRelativePath"), TEXT("Event.h"));
			MetaData->SetValue(NewProp_ChangeToPreviousEvent, TEXT("Category"), TEXT("Variables"));
			MetaData->SetValue(NewProp_ChangeToPreviousEvent, TEXT("ModuleRelativePath"), TEXT("Event.h"));
			MetaData->SetValue(NewProp_AutoReload, TEXT("Category"), TEXT("Variables"));
			MetaData->SetValue(NewProp_AutoReload, TEXT("ModuleRelativePath"), TEXT("Event.h"));
			MetaData->SetValue(NewProp_ShowClusters, TEXT("Category"), TEXT("Variables"));
			MetaData->SetValue(NewProp_ShowClusters, TEXT("ModuleRelativePath"), TEXT("Event.h"));
			MetaData->SetValue(NewProp_ShowJets, TEXT("Category"), TEXT("Variables"));
			MetaData->SetValue(NewProp_ShowJets, TEXT("ModuleRelativePath"), TEXT("Event.h"));
			MetaData->SetValue(NewProp_ShowTracks, TEXT("Category"), TEXT("Variables"));
			MetaData->SetValue(NewProp_ShowTracks, TEXT("ModuleRelativePath"), TEXT("Event.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEventState_CRC() { return 2087421028U; }
	UFunction* Z_Construct_UFunction_AEvent_Add4Points()
	{
		struct Event_eventAdd4Points_Parms
		{
			float energy1;
		};
		UObject* Outer=Z_Construct_UClass_AEvent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Add4Points"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Event_eventAdd4Points_Parms));
			UProperty* NewProp_energy1 = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("energy1"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(energy1, Event_eventAdd4Points_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Event Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Event.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEvent_AddTris()
	{
		UObject* Outer=Z_Construct_UClass_AEvent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddTris"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Event Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Event.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEvent_GetDescription()
	{
		struct Event_eventGetDescription_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AEvent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetDescription"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Event_eventGetDescription_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, Event_eventGetDescription_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Event Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Event.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEvent_GetEvent()
	{
		UObject* Outer=Z_Construct_UClass_AEvent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetEvent"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Event Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Event.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEvent_GetEventNr()
	{
		struct Event_eventGetEventNr_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AEvent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetEventNr"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Event_eventGetEventNr_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, Event_eventGetEventNr_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Event Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Event.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEvent_GetRunNr()
	{
		struct Event_eventGetRunNr_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AEvent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetRunNr"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Event_eventGetRunNr_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, Event_eventGetRunNr_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Event Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Event.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEvent_GetTethaFromEta()
	{
		struct Event_eventGetTethaFromEta_Parms
		{
			float eta;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AEvent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTethaFromEta"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Event_eventGetTethaFromEta_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, Event_eventGetTethaFromEta_Parms), 0x0000000000000580);
			UProperty* NewProp_eta = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("eta"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(eta, Event_eventGetTethaFromEta_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Geometry Transformation Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Event.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEvent_onEventDownloaded()
	{
		UObject* Outer=Z_Construct_UClass_AEvent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("onEventDownloaded"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("EventServer"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Event.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEvent_ShowClustersFunc()
	{
		struct Event_eventShowClustersFunc_Parms
		{
			float percent;
		};
		UObject* Outer=Z_Construct_UClass_AEvent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ShowClustersFunc"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Event_eventShowClustersFunc_Parms));
			UProperty* NewProp_percent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("percent"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(percent, Event_eventShowClustersFunc_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Event Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Event.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEvent_ShowTracksFunc()
	{
		UObject* Outer=Z_Construct_UClass_AEvent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ShowTracksFunc"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Event Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Event.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AEvent_NoRegister()
	{
		return AEvent::StaticClass();
	}
	UClass* Z_Construct_UClass_AEvent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_ATLASrift();
			OuterClass = AEvent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AEvent_Add4Points());
				OuterClass->LinkChild(Z_Construct_UFunction_AEvent_AddTris());
				OuterClass->LinkChild(Z_Construct_UFunction_AEvent_GetDescription());
				OuterClass->LinkChild(Z_Construct_UFunction_AEvent_GetEvent());
				OuterClass->LinkChild(Z_Construct_UFunction_AEvent_GetEventNr());
				OuterClass->LinkChild(Z_Construct_UFunction_AEvent_GetRunNr());
				OuterClass->LinkChild(Z_Construct_UFunction_AEvent_GetTethaFromEta());
				OuterClass->LinkChild(Z_Construct_UFunction_AEvent_onEventDownloaded());
				OuterClass->LinkChild(Z_Construct_UFunction_AEvent_ShowClustersFunc());
				OuterClass->LinkChild(Z_Construct_UFunction_AEvent_ShowTracksFunc());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Jets = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Jets"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Jets, AEvent), 0x0004000000000014);
				UProperty* NewProp_Jets_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Jets, TEXT("Jets"), RF_Public|RF_Transient|RF_Native) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_AJet_NoRegister());
				UProperty* NewProp_Clusters = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Clusters"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Clusters, AEvent), 0x0004000000000014);
				UProperty* NewProp_Clusters_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Clusters, TEXT("Clusters"), RF_Public|RF_Transient|RF_Native) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_ACluster_NoRegister());
				UProperty* NewProp_Tracks = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Tracks"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Tracks, AEvent), 0x0004000000000014);
				UProperty* NewProp_Tracks_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Tracks, TEXT("Tracks"), RF_Public|RF_Transient|RF_Native) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_ATrack_NoRegister());
				UProperty* NewProp_EventState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EventState"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(EventState, AEvent), 0x0000000000000005, Z_Construct_UScriptStruct_FEventState());
				UProperty* NewProp_VerticesY = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VerticesY"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(VerticesY, AEvent), 0x0000000000000005);
				UProperty* NewProp_VerticesY_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VerticesY, TEXT("VerticesY"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_VerticesX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VerticesX"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(VerticesX, AEvent), 0x0000000000000005);
				UProperty* NewProp_VerticesX_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VerticesX, TEXT("VerticesX"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_Vertices = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Vertices"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Vertices, AEvent), 0x0000000000000005);
				UProperty* NewProp_Vertices_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Vertices, TEXT("Vertices"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_Points = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Points"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Points, AEvent), 0x0000000000000005);
				UProperty* NewProp_Points_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Points, TEXT("Points"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_VertexPattern = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VertexPattern"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(VertexPattern, AEvent), 0x0000000000000005);
				UProperty* NewProp_VertexPattern_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VertexPattern, TEXT("VertexPattern"), RF_Public|RF_Transient|RF_Native) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_TrianglesY = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TrianglesY"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(TrianglesY, AEvent), 0x0000000000000005);
				UProperty* NewProp_TrianglesY_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TrianglesY, TEXT("TrianglesY"), RF_Public|RF_Transient|RF_Native) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_TrianglesX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TrianglesX"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(TrianglesX, AEvent), 0x0000000000000005);
				UProperty* NewProp_TrianglesX_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TrianglesX, TEXT("TrianglesX"), RF_Public|RF_Transient|RF_Native) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_Triangles = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Triangles"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Triangles, AEvent), 0x0000000000000005);
				UProperty* NewProp_Triangles_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Triangles, TEXT("Triangles"), RF_Public|RF_Transient|RF_Native) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_currentVertexIndexY = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currentVertexIndexY"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(currentVertexIndexY, AEvent), 0x0000000000000005);
				UProperty* NewProp_currentVertexIndexX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currentVertexIndexX"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(currentVertexIndexX, AEvent), 0x0000000000000005);
				UProperty* NewProp_currentVertexIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currentVertexIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(currentVertexIndex, AEvent), 0x0000000000000005);
				UProperty* NewProp_Energy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Energy"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Energy, AEvent), 0x0000000000000005);
				UProperty* NewProp_Theta = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Theta"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Theta, AEvent), 0x0000000000000005);
				UProperty* NewProp_Phi = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Phi"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Phi, AEvent), 0x0000000000000005);
				UProperty* NewProp_eventID = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("eventID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(eventID, AEvent), 0x0000000000000004);
				UProperty* NewProp_tangents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("tangents"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(tangents, AEvent), 0x0000000000000005);
				UProperty* NewProp_tangents_Inner = new(EC_InternalUseOnlyConstructor, NewProp_tangents, TEXT("tangents"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FProcMeshTangent());
				UProperty* NewProp_vertexColors = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("vertexColors"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(vertexColors, AEvent), 0x0000000000000005);
				UProperty* NewProp_vertexColors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_vertexColors, TEXT("vertexColors"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_UV0 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UV0"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(UV0, AEvent), 0x0000000000000005);
				UProperty* NewProp_UV0_Inner = new(EC_InternalUseOnlyConstructor, NewProp_UV0, TEXT("UV0"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector2D());
				UProperty* NewProp_normals = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("normals"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(normals, AEvent), 0x0000000000000005);
				UProperty* NewProp_normals_Inner = new(EC_InternalUseOnlyConstructor, NewProp_normals, TEXT("normals"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_TrackMaterial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TrackMaterial"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TrackMaterial, AEvent), 0x0000000000000005, Z_Construct_UClass_UMaterial_NoRegister());
				UProperty* NewProp_ClusterMaterial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClusterMaterial"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ClusterMaterial, AEvent), 0x0000000000000005, Z_Construct_UClass_UMaterial_NoRegister());
				UProperty* NewProp_TargetHost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetHost"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(TargetHost, AEvent), 0x0000000000010001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEvent_Add4Points()); // 3437569814
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEvent_AddTris()); // 2459847155
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEvent_GetDescription()); // 441737443
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEvent_GetEvent()); // 3848012069
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEvent_GetEventNr()); // 707475995
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEvent_GetRunNr()); // 2090436829
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEvent_GetTethaFromEta()); // 953010299
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEvent_onEventDownloaded()); // 2873975365
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEvent_ShowClustersFunc()); // 3465955091
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEvent_ShowTracksFunc()); // 416913358
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Event.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_Jets, TEXT("Category"), TEXT("Event elements"));
				MetaData->SetValue(NewProp_Jets, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_Clusters, TEXT("Category"), TEXT("Event elements"));
				MetaData->SetValue(NewProp_Clusters, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_Tracks, TEXT("Category"), TEXT("Event elements"));
				MetaData->SetValue(NewProp_Tracks, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_EventState, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_EventState, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_VerticesY, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_VerticesY, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_VerticesX, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_VerticesX, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_Vertices, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_Vertices, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_Points, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_Points, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_VertexPattern, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_VertexPattern, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_TrianglesY, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_TrianglesY, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_TrianglesX, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_TrianglesX, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_Triangles, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_Triangles, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_currentVertexIndexY, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_currentVertexIndexY, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_currentVertexIndexX, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_currentVertexIndexX, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_currentVertexIndex, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_currentVertexIndex, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_Energy, TEXT("Category"), TEXT("EventServer"));
				MetaData->SetValue(NewProp_Energy, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_Theta, TEXT("Category"), TEXT("EventServer"));
				MetaData->SetValue(NewProp_Theta, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_Phi, TEXT("Category"), TEXT("EventServer"));
				MetaData->SetValue(NewProp_Phi, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_eventID, TEXT("Category"), TEXT("Event Properties"));
				MetaData->SetValue(NewProp_eventID, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_tangents, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_tangents, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_vertexColors, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_vertexColors, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_UV0, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_UV0, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_normals, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_normals, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_TrackMaterial, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_TrackMaterial, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_ClusterMaterial, TEXT("Category"), TEXT("Variables"));
				MetaData->SetValue(NewProp_ClusterMaterial, TEXT("ModuleRelativePath"), TEXT("Event.h"));
				MetaData->SetValue(NewProp_TargetHost, TEXT("Category"), TEXT("EventServer"));
				MetaData->SetValue(NewProp_TargetHost, TEXT("ModuleRelativePath"), TEXT("Event.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AEvent(Z_Construct_UClass_AEvent, TEXT("AEvent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AEvent);
	UClass* Z_Construct_UClass_AJet_NoRegister()
	{
		return AJet::StaticClass();
	}
	UClass* Z_Construct_UClass_AJet()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_ATLASrift();
			OuterClass = AJet::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_energy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("energy"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(energy, AJet), 0x0000000000000014);
				UProperty* NewProp_eta = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("eta"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(eta, AJet), 0x0000000000000014);
				UProperty* NewProp_phi = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("phi"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(phi, AJet), 0x0000000000000014);
				UProperty* NewProp_coneR = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("coneR"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(coneR, AJet), 0x0000000000000014);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Jet.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Jet.h"));
				MetaData->SetValue(NewProp_energy, TEXT("Category"), TEXT("Jet Parameters"));
				MetaData->SetValue(NewProp_energy, TEXT("ModuleRelativePath"), TEXT("Jet.h"));
				MetaData->SetValue(NewProp_eta, TEXT("Category"), TEXT("Jet Parameters"));
				MetaData->SetValue(NewProp_eta, TEXT("ModuleRelativePath"), TEXT("Jet.h"));
				MetaData->SetValue(NewProp_phi, TEXT("Category"), TEXT("Jet Parameters"));
				MetaData->SetValue(NewProp_phi, TEXT("ModuleRelativePath"), TEXT("Jet.h"));
				MetaData->SetValue(NewProp_coneR, TEXT("Category"), TEXT("Jet Parameters"));
				MetaData->SetValue(NewProp_coneR, TEXT("ModuleRelativePath"), TEXT("Jet.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AJet(Z_Construct_UClass_AJet, TEXT("AJet"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AJet);
	UClass* Z_Construct_UClass_UMyProceduralMeshComponent_NoRegister()
	{
		return UMyProceduralMeshComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UMyProceduralMeshComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UProceduralMeshComponent();
			Z_Construct_UPackage_ATLASrift();
			OuterClass = UMyProceduralMeshComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object LOD Mobility Trigger ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyProceduralMeshComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyProceduralMeshComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMyProceduralMeshComponent(Z_Construct_UClass_UMyProceduralMeshComponent, TEXT("UMyProceduralMeshComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMyProceduralMeshComponent);
	UScriptStruct* Z_Construct_UScriptStruct_FNetServer()
	{
		UPackage* Outer=Z_Construct_UPackage_ATLASrift();
		extern uint32 Get_Z_Construct_UScriptStruct_FNetServer_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("NetServer"), sizeof(FNetServer), Get_Z_Construct_UScriptStruct_FNetServer_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("NetServer"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FNetServer>, EStructFlags(0x00000201));
			UProperty* NewProp_clients = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("clients"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(clients, FNetServer), 0x0000000000000014);
			UProperty* NewProp_description = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("description"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(description, FNetServer), 0x0000000000000014);
			UProperty* NewProp_ip = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ip"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ip, FNetServer), 0x0000000000000014);
			UProperty* NewProp_accessCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("accessCode"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(accessCode, FNetServer), 0x0000000000000014);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("NetServer.h"));
			MetaData->SetValue(NewProp_clients, TEXT("Category"), TEXT("NetServer"));
			MetaData->SetValue(NewProp_clients, TEXT("ModuleRelativePath"), TEXT("NetServer.h"));
			MetaData->SetValue(NewProp_description, TEXT("Category"), TEXT("NetServer"));
			MetaData->SetValue(NewProp_description, TEXT("ModuleRelativePath"), TEXT("NetServer.h"));
			MetaData->SetValue(NewProp_ip, TEXT("Category"), TEXT("NetServer"));
			MetaData->SetValue(NewProp_ip, TEXT("ModuleRelativePath"), TEXT("NetServer.h"));
			MetaData->SetValue(NewProp_accessCode, TEXT("Category"), TEXT("NetServer"));
			MetaData->SetValue(NewProp_accessCode, TEXT("ModuleRelativePath"), TEXT("NetServer.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FNetServer_CRC() { return 271670904U; }
	UFunction* Z_Construct_UFunction_UReporter_HostAServer()
	{
		struct Reporter_eventHostAServer_Parms
		{
			FString description;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UReporter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HostAServer"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Reporter_eventHostAServer_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, Reporter_eventHostAServer_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, Reporter_eventHostAServer_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, Reporter_eventHostAServer_Parms), sizeof(bool), true);
			UProperty* NewProp_description = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("description"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(description, Reporter_eventHostAServer_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Server"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Reporter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UReporter_KeepAliveUDP()
	{
		struct Reporter_eventKeepAliveUDP_Parms
		{
			FString message;
		};
		UObject* Outer=Z_Construct_UClass_UReporter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("KeepAliveUDP"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Reporter_eventKeepAliveUDP_Parms));
			UProperty* NewProp_message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("message"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(message, Reporter_eventKeepAliveUDP_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Server"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Reporter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UFUNCTION(BlueprintCallable, Category = \"Server\")\n       void KeepAlive(int32 clients);"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UReporter_LoadNetServers()
	{
		UObject* Outer=Z_Construct_UClass_UReporter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LoadNetServers"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Server"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Reporter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UReporter_StartWork()
	{
		struct Reporter_eventStartWork_Parms
		{
			FString js;
		};
		UObject* Outer=Z_Construct_UClass_UReporter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StartWork"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Reporter_eventStartWork_Parms));
			UProperty* NewProp_js = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("js"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(js, Reporter_eventStartWork_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Report On"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Reporter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UReporter_StopWork()
	{
		UObject* Outer=Z_Construct_UClass_UReporter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StopWork"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Report On"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Reporter.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UReporter_NoRegister()
	{
		return UReporter::StaticClass();
	}
	UClass* Z_Construct_UClass_UReporter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage_ATLASrift();
			OuterClass = UReporter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UReporter_HostAServer());
				OuterClass->LinkChild(Z_Construct_UFunction_UReporter_KeepAliveUDP());
				OuterClass->LinkChild(Z_Construct_UFunction_UReporter_LoadNetServers());
				OuterClass->LinkChild(Z_Construct_UFunction_UReporter_StartWork());
				OuterClass->LinkChild(Z_Construct_UFunction_UReporter_StopWork());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ANetServers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ANetServers"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ANetServers, UReporter), 0x0000000000000014);
				UProperty* NewProp_ANetServers_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ANetServers, TEXT("ANetServers"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FNetServer());
				UProperty* NewProp_TargetHost = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TargetHost"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(TargetHost, UReporter), 0x0000000000010001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UReporter_HostAServer()); // 2704691204
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UReporter_KeepAliveUDP()); // 3749274988
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UReporter_LoadNetServers()); // 2527675482
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UReporter_StartWork()); // 2326253515
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UReporter_StopWork()); // 2359642398
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Reporter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Reporter.h"));
				MetaData->SetValue(NewProp_ANetServers, TEXT("Category"), TEXT("Event elements"));
				MetaData->SetValue(NewProp_ANetServers, TEXT("ModuleRelativePath"), TEXT("Reporter.h"));
				MetaData->SetValue(NewProp_TargetHost, TEXT("Category"), TEXT("ReporterSettings"));
				MetaData->SetValue(NewProp_TargetHost, TEXT("ModuleRelativePath"), TEXT("Reporter.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UReporter(Z_Construct_UClass_UReporter, TEXT("UReporter"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UReporter);
	UPackage* Z_Construct_UPackage_ATLASrift()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/ATLASrift")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xD61C9B3E;
			Guid.B = 0xC673EBFD;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
