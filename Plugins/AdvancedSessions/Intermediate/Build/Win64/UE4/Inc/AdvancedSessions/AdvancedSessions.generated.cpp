// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/OnlineSubSystemHeader.h"
#include "AdvancedSessions.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeAdvancedSessions() {}
static class UEnum* EOnlineComparisonOpRedux_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ADVANCEDSESSIONS_API class UEnum* Z_Construct_UEnum_AdvancedSessions_EOnlineComparisonOpRedux();
		extern ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AdvancedSessions_EOnlineComparisonOpRedux, Z_Construct_UPackage_AdvancedSessions(), TEXT("EOnlineComparisonOpRedux"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EOnlineComparisonOpRedux(EOnlineComparisonOpRedux_StaticEnum, TEXT("/Script/AdvancedSessions"));
static class UEnum* EBPOnlineSessionState_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ADVANCEDSESSIONS_API class UEnum* Z_Construct_UEnum_AdvancedSessions_EBPOnlineSessionState();
		extern ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AdvancedSessions_EBPOnlineSessionState, Z_Construct_UPackage_AdvancedSessions(), TEXT("EBPOnlineSessionState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBPOnlineSessionState(EBPOnlineSessionState_StaticEnum, TEXT("/Script/AdvancedSessions"));
static class UEnum* EBPOnlinePresenceState_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ADVANCEDSESSIONS_API class UEnum* Z_Construct_UEnum_AdvancedSessions_EBPOnlinePresenceState();
		extern ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AdvancedSessions_EBPOnlinePresenceState, Z_Construct_UPackage_AdvancedSessions(), TEXT("EBPOnlinePresenceState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBPOnlinePresenceState(EBPOnlinePresenceState_StaticEnum, TEXT("/Script/AdvancedSessions"));
static class UEnum* EBlueprintResultSwitch_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ADVANCEDSESSIONS_API class UEnum* Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch();
		extern ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch, Z_Construct_UPackage_AdvancedSessions(), TEXT("EBlueprintResultSwitch"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBlueprintResultSwitch(EBlueprintResultSwitch_StaticEnum, TEXT("/Script/AdvancedSessions"));
static class UEnum* ESessionSettingSearchResult_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ADVANCEDSESSIONS_API class UEnum* Z_Construct_UEnum_AdvancedSessions_ESessionSettingSearchResult();
		extern ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AdvancedSessions_ESessionSettingSearchResult, Z_Construct_UPackage_AdvancedSessions(), TEXT("ESessionSettingSearchResult"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESessionSettingSearchResult(ESessionSettingSearchResult_StaticEnum, TEXT("/Script/AdvancedSessions"));
class UScriptStruct* FSessionsSearchSetting::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FSessionsSearchSetting();
		extern ADVANCEDSESSIONS_API uint32 Get_Z_Construct_UScriptStruct_FSessionsSearchSetting_CRC();
		extern ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSessionsSearchSetting, Z_Construct_UPackage_AdvancedSessions(), TEXT("SessionsSearchSetting"), sizeof(FSessionsSearchSetting), Get_Z_Construct_UScriptStruct_FSessionsSearchSetting_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSessionsSearchSetting(FSessionsSearchSetting::StaticStruct, TEXT("/Script/AdvancedSessions"));
static struct FScriptStruct_AdvancedSessions_StaticRegisterNativesFSessionsSearchSetting
{
	FScriptStruct_AdvancedSessions_StaticRegisterNativesFSessionsSearchSetting()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SessionsSearchSetting")),new UScriptStruct::TCppStructOps<FSessionsSearchSetting>);
	}
} ScriptStruct_AdvancedSessions_StaticRegisterNativesFSessionsSearchSetting;
class UScriptStruct* FSessionPropertyKeyPair::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FSessionPropertyKeyPair();
		extern ADVANCEDSESSIONS_API uint32 Get_Z_Construct_UScriptStruct_FSessionPropertyKeyPair_CRC();
		extern ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSessionPropertyKeyPair, Z_Construct_UPackage_AdvancedSessions(), TEXT("SessionPropertyKeyPair"), sizeof(FSessionPropertyKeyPair), Get_Z_Construct_UScriptStruct_FSessionPropertyKeyPair_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSessionPropertyKeyPair(FSessionPropertyKeyPair::StaticStruct, TEXT("/Script/AdvancedSessions"));
static struct FScriptStruct_AdvancedSessions_StaticRegisterNativesFSessionPropertyKeyPair
{
	FScriptStruct_AdvancedSessions_StaticRegisterNativesFSessionPropertyKeyPair()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SessionPropertyKeyPair")),new UScriptStruct::TCppStructOps<FSessionPropertyKeyPair>);
	}
} ScriptStruct_AdvancedSessions_StaticRegisterNativesFSessionPropertyKeyPair;
class UScriptStruct* FBPFriendInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FBPFriendInfo();
		extern ADVANCEDSESSIONS_API uint32 Get_Z_Construct_UScriptStruct_FBPFriendInfo_CRC();
		extern ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBPFriendInfo, Z_Construct_UPackage_AdvancedSessions(), TEXT("BPFriendInfo"), sizeof(FBPFriendInfo), Get_Z_Construct_UScriptStruct_FBPFriendInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBPFriendInfo(FBPFriendInfo::StaticStruct, TEXT("/Script/AdvancedSessions"));
static struct FScriptStruct_AdvancedSessions_StaticRegisterNativesFBPFriendInfo
{
	FScriptStruct_AdvancedSessions_StaticRegisterNativesFBPFriendInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BPFriendInfo")),new UScriptStruct::TCppStructOps<FBPFriendInfo>);
	}
} ScriptStruct_AdvancedSessions_StaticRegisterNativesFBPFriendInfo;
class UScriptStruct* FBPFriendPresenceInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FBPFriendPresenceInfo();
		extern ADVANCEDSESSIONS_API uint32 Get_Z_Construct_UScriptStruct_FBPFriendPresenceInfo_CRC();
		extern ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBPFriendPresenceInfo, Z_Construct_UPackage_AdvancedSessions(), TEXT("BPFriendPresenceInfo"), sizeof(FBPFriendPresenceInfo), Get_Z_Construct_UScriptStruct_FBPFriendPresenceInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBPFriendPresenceInfo(FBPFriendPresenceInfo::StaticStruct, TEXT("/Script/AdvancedSessions"));
static struct FScriptStruct_AdvancedSessions_StaticRegisterNativesFBPFriendPresenceInfo
{
	FScriptStruct_AdvancedSessions_StaticRegisterNativesFBPFriendPresenceInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BPFriendPresenceInfo")),new UScriptStruct::TCppStructOps<FBPFriendPresenceInfo>);
	}
} ScriptStruct_AdvancedSessions_StaticRegisterNativesFBPFriendPresenceInfo;
class UScriptStruct* FBPOnlineRecentPlayer::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FBPOnlineRecentPlayer();
		extern ADVANCEDSESSIONS_API uint32 Get_Z_Construct_UScriptStruct_FBPOnlineRecentPlayer_CRC();
		extern ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBPOnlineRecentPlayer, Z_Construct_UPackage_AdvancedSessions(), TEXT("BPOnlineRecentPlayer"), sizeof(FBPOnlineRecentPlayer), Get_Z_Construct_UScriptStruct_FBPOnlineRecentPlayer_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBPOnlineRecentPlayer(FBPOnlineRecentPlayer::StaticStruct, TEXT("/Script/AdvancedSessions"));
static struct FScriptStruct_AdvancedSessions_StaticRegisterNativesFBPOnlineRecentPlayer
{
	FScriptStruct_AdvancedSessions_StaticRegisterNativesFBPOnlineRecentPlayer()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BPOnlineRecentPlayer")),new UScriptStruct::TCppStructOps<FBPOnlineRecentPlayer>);
	}
} ScriptStruct_AdvancedSessions_StaticRegisterNativesFBPOnlineRecentPlayer;
class UScriptStruct* FBPOnlineUser::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FBPOnlineUser();
		extern ADVANCEDSESSIONS_API uint32 Get_Z_Construct_UScriptStruct_FBPOnlineUser_CRC();
		extern ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBPOnlineUser, Z_Construct_UPackage_AdvancedSessions(), TEXT("BPOnlineUser"), sizeof(FBPOnlineUser), Get_Z_Construct_UScriptStruct_FBPOnlineUser_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBPOnlineUser(FBPOnlineUser::StaticStruct, TEXT("/Script/AdvancedSessions"));
static struct FScriptStruct_AdvancedSessions_StaticRegisterNativesFBPOnlineUser
{
	FScriptStruct_AdvancedSessions_StaticRegisterNativesFBPOnlineUser()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BPOnlineUser")),new UScriptStruct::TCppStructOps<FBPOnlineUser>);
	}
} ScriptStruct_AdvancedSessions_StaticRegisterNativesFBPOnlineUser;
class UScriptStruct* FBPUniqueNetId::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FBPUniqueNetId();
		extern ADVANCEDSESSIONS_API uint32 Get_Z_Construct_UScriptStruct_FBPUniqueNetId_CRC();
		extern ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBPUniqueNetId, Z_Construct_UPackage_AdvancedSessions(), TEXT("BPUniqueNetId"), sizeof(FBPUniqueNetId), Get_Z_Construct_UScriptStruct_FBPUniqueNetId_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBPUniqueNetId(FBPUniqueNetId::StaticStruct, TEXT("/Script/AdvancedSessions"));
static struct FScriptStruct_AdvancedSessions_StaticRegisterNativesFBPUniqueNetId
{
	FScriptStruct_AdvancedSessions_StaticRegisterNativesFBPUniqueNetId()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BPUniqueNetId")),new UScriptStruct::TCppStructOps<FBPUniqueNetId>);
	}
} ScriptStruct_AdvancedSessions_StaticRegisterNativesFBPUniqueNetId;
	void UAdvancedExternalUILibrary::StaticRegisterNativesUAdvancedExternalUILibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedExternalUILibrary::StaticClass(),"ShowAccountUpgradeUI",(Native)&UAdvancedExternalUILibrary::execShowAccountUpgradeUI);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedExternalUILibrary::StaticClass(),"ShowFriendsUI",(Native)&UAdvancedExternalUILibrary::execShowFriendsUI);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedExternalUILibrary::StaticClass(),"ShowInviteUI",(Native)&UAdvancedExternalUILibrary::execShowInviteUI);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedExternalUILibrary::StaticClass(),"ShowLeaderBoardUI",(Native)&UAdvancedExternalUILibrary::execShowLeaderBoardUI);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedExternalUILibrary::StaticClass(),"ShowProfileUI",(Native)&UAdvancedExternalUILibrary::execShowProfileUI);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedExternalUILibrary::StaticClass(),"ShowWebURLUI",(Native)&UAdvancedExternalUILibrary::execShowWebURLUI);
	}
	IMPLEMENT_CLASS(UAdvancedExternalUILibrary, 2769646734);
	void IAdvancedFriendsInterface::OnPlayerVoiceStateChanged(FBPUniqueNetId PlayerId, bool bIsTalking)
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_OnPlayerVoiceStateChanged instead.");
	}
	void IAdvancedFriendsInterface::OnSessionInviteAccepted(FBPUniqueNetId PersonInviting, const FBlueprintSessionResult& SearchResult)
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_OnSessionInviteAccepted instead.");
	}
	void IAdvancedFriendsInterface::OnSessionInviteReceived(FBPUniqueNetId PersonInviting, const FBlueprintSessionResult& SearchResult)
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_OnSessionInviteReceived instead.");
	}
	void UAdvancedFriendsInterface::StaticRegisterNativesUAdvancedFriendsInterface()
	{
	}
	IMPLEMENT_CLASS(UAdvancedFriendsInterface, 2499974744);
	void IAdvancedFriendsInterface::Execute_OnPlayerVoiceStateChanged(UObject* O, FBPUniqueNetId PlayerId, bool bIsTalking)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UAdvancedFriendsInterface::StaticClass()));
		AdvancedFriendsInterface_eventOnPlayerVoiceStateChanged_Parms Parms;
		UFunction* const Func = O->FindFunction(ADVANCEDSESSIONS_OnPlayerVoiceStateChanged);
		if (Func)
		{
			Parms.PlayerId=PlayerId;
			Parms.bIsTalking=bIsTalking;
			O->ProcessEvent(Func, &Parms);
		}
	}
	void IAdvancedFriendsInterface::Execute_OnSessionInviteAccepted(UObject* O, FBPUniqueNetId PersonInviting, const FBlueprintSessionResult& SearchResult)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UAdvancedFriendsInterface::StaticClass()));
		AdvancedFriendsInterface_eventOnSessionInviteAccepted_Parms Parms;
		UFunction* const Func = O->FindFunction(ADVANCEDSESSIONS_OnSessionInviteAccepted);
		if (Func)
		{
			Parms.PersonInviting=PersonInviting;
			Parms.SearchResult=SearchResult;
			O->ProcessEvent(Func, &Parms);
		}
	}
	void IAdvancedFriendsInterface::Execute_OnSessionInviteReceived(UObject* O, FBPUniqueNetId PersonInviting, const FBlueprintSessionResult& SearchResult)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UAdvancedFriendsInterface::StaticClass()));
		AdvancedFriendsInterface_eventOnSessionInviteReceived_Parms Parms;
		UFunction* const Func = O->FindFunction(ADVANCEDSESSIONS_OnSessionInviteReceived);
		if (Func)
		{
			Parms.PersonInviting=PersonInviting;
			Parms.SearchResult=SearchResult;
			O->ProcessEvent(Func, &Parms);
		}
	}
	void UAdvancedFriendsGameInstance::OnPlayerTalkingStateChanged(FBPUniqueNetId PlayerId, bool bIsTalking)
	{
		AdvancedFriendsGameInstance_eventOnPlayerTalkingStateChanged_Parms Parms;
		Parms.PlayerId=PlayerId;
		Parms.bIsTalking=bIsTalking ? true : false;
		ProcessEvent(FindFunctionChecked(ADVANCEDSESSIONS_OnPlayerTalkingStateChanged),&Parms);
	}
	void UAdvancedFriendsGameInstance::OnSessionInviteAccepted(int32 LocalPlayerNum, FBPUniqueNetId PersonInviting, const FBlueprintSessionResult& SessionToJoin)
	{
		AdvancedFriendsGameInstance_eventOnSessionInviteAccepted_Parms Parms;
		Parms.LocalPlayerNum=LocalPlayerNum;
		Parms.PersonInviting=PersonInviting;
		Parms.SessionToJoin=SessionToJoin;
		ProcessEvent(FindFunctionChecked(ADVANCEDSESSIONS_OnSessionInviteAccepted),&Parms);
	}
	void UAdvancedFriendsGameInstance::OnSessionInviteReceived(int32 LocalPlayerNum, FBPUniqueNetId PersonInviting, const FString& AppId, const FBlueprintSessionResult& SessionToJoin)
	{
		AdvancedFriendsGameInstance_eventOnSessionInviteReceived_Parms Parms;
		Parms.LocalPlayerNum=LocalPlayerNum;
		Parms.PersonInviting=PersonInviting;
		Parms.AppId=AppId;
		Parms.SessionToJoin=SessionToJoin;
		ProcessEvent(FindFunctionChecked(ADVANCEDSESSIONS_OnSessionInviteReceived),&Parms);
	}
	void UAdvancedFriendsGameInstance::StaticRegisterNativesUAdvancedFriendsGameInstance()
	{
	}
	IMPLEMENT_CLASS(UAdvancedFriendsGameInstance, 166480389);
static class UEnum* SteamAvatarSize_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ADVANCEDSESSIONS_API class UEnum* Z_Construct_UEnum_AdvancedSessions_SteamAvatarSize();
		extern ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
		Singleton = GetStaticEnum(Z_Construct_UEnum_AdvancedSessions_SteamAvatarSize, Z_Construct_UPackage_AdvancedSessions(), TEXT("SteamAvatarSize"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SteamAvatarSize(SteamAvatarSize_StaticEnum, TEXT("/Script/AdvancedSessions"));
	void UAdvancedFriendsLibrary::StaticRegisterNativesUAdvancedFriendsLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedFriendsLibrary::StaticClass(),"GetFriend",(Native)&UAdvancedFriendsLibrary::execGetFriend);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedFriendsLibrary::StaticClass(),"GetFriendSteamLevel",(Native)&UAdvancedFriendsLibrary::execGetFriendSteamLevel);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedFriendsLibrary::StaticClass(),"GetSteamFriendAvatar",(Native)&UAdvancedFriendsLibrary::execGetSteamFriendAvatar);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedFriendsLibrary::StaticClass(),"GetStoredFriendsList",(Native)&UAdvancedFriendsLibrary::execGetStoredFriendsList);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedFriendsLibrary::StaticClass(),"GetStoredRecentPlayersList",(Native)&UAdvancedFriendsLibrary::execGetStoredRecentPlayersList);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedFriendsLibrary::StaticClass(),"IsAFriend",(Native)&UAdvancedFriendsLibrary::execIsAFriend);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedFriendsLibrary::StaticClass(),"RequestSteamFriendInfo",(Native)&UAdvancedFriendsLibrary::execRequestSteamFriendInfo);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedFriendsLibrary::StaticClass(),"SendSessionInviteToFriend",(Native)&UAdvancedFriendsLibrary::execSendSessionInviteToFriend);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedFriendsLibrary::StaticClass(),"SendSessionInviteToFriends",(Native)&UAdvancedFriendsLibrary::execSendSessionInviteToFriends);
	}
	IMPLEMENT_CLASS(UAdvancedFriendsLibrary, 349372931);
	void UAdvancedSessionsLibrary::StaticRegisterNativesUAdvancedSessionsLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"AddOrModifyExtraSettings",(Native)&UAdvancedSessionsLibrary::execAddOrModifyExtraSettings);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetCurrentUniqueBuildID",(Native)&UAdvancedSessionsLibrary::execGetCurrentUniqueBuildID);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetExtraSettings",(Native)&UAdvancedSessionsLibrary::execGetExtraSettings);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetNetPlayerIndex",(Native)&UAdvancedSessionsLibrary::execGetNetPlayerIndex);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetNumberOfNetworkPlayers",(Native)&UAdvancedSessionsLibrary::execGetNumberOfNetworkPlayers);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetPlayerName",(Native)&UAdvancedSessionsLibrary::execGetPlayerName);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetSessionPropertyBool",(Native)&UAdvancedSessionsLibrary::execGetSessionPropertyBool);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetSessionPropertyByte",(Native)&UAdvancedSessionsLibrary::execGetSessionPropertyByte);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetSessionPropertyFloat",(Native)&UAdvancedSessionsLibrary::execGetSessionPropertyFloat);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetSessionPropertyInt",(Native)&UAdvancedSessionsLibrary::execGetSessionPropertyInt);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetSessionPropertyString",(Native)&UAdvancedSessionsLibrary::execGetSessionPropertyString);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetSessionSettings",(Native)&UAdvancedSessionsLibrary::execGetSessionSettings);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetSessionState",(Native)&UAdvancedSessionsLibrary::execGetSessionState);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetUniqueBuildID",(Native)&UAdvancedSessionsLibrary::execGetUniqueBuildID);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetUniqueNetID",(Native)&UAdvancedSessionsLibrary::execGetUniqueNetID);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"GetUniqueNetIDFromPlayerState",(Native)&UAdvancedSessionsLibrary::execGetUniqueNetIDFromPlayerState);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"HasOnlineSubsystem",(Native)&UAdvancedSessionsLibrary::execHasOnlineSubsystem);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"IsPlayerInSession",(Native)&UAdvancedSessionsLibrary::execIsPlayerInSession);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"MakeLiteralSessionPropertyBool",(Native)&UAdvancedSessionsLibrary::execMakeLiteralSessionPropertyBool);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"MakeLiteralSessionPropertyByte",(Native)&UAdvancedSessionsLibrary::execMakeLiteralSessionPropertyByte);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"MakeLiteralSessionPropertyFloat",(Native)&UAdvancedSessionsLibrary::execMakeLiteralSessionPropertyFloat);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"MakeLiteralSessionPropertyInt",(Native)&UAdvancedSessionsLibrary::execMakeLiteralSessionPropertyInt);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"MakeLiteralSessionPropertyString",(Native)&UAdvancedSessionsLibrary::execMakeLiteralSessionPropertyString);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"MakeLiteralSessionSearchProperty",(Native)&UAdvancedSessionsLibrary::execMakeLiteralSessionSearchProperty);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"SetPlayerName",(Native)&UAdvancedSessionsLibrary::execSetPlayerName);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedSessionsLibrary::StaticClass(),"UniqueNetIdToString",(Native)&UAdvancedSessionsLibrary::execUniqueNetIdToString);
	}
	IMPLEMENT_CLASS(UAdvancedSessionsLibrary, 399594383);
	void UAdvancedVoiceLibrary::StaticRegisterNativesUAdvancedVoiceLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"GetNumLocalTalkers",(Native)&UAdvancedVoiceLibrary::execGetNumLocalTalkers);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"IsHeadsetPresent",(Native)&UAdvancedVoiceLibrary::execIsHeadsetPresent);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"IsLocalPlayerTalking",(Native)&UAdvancedVoiceLibrary::execIsLocalPlayerTalking);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"IsPlayerMuted",(Native)&UAdvancedVoiceLibrary::execIsPlayerMuted);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"IsRemotePlayerTalking",(Native)&UAdvancedVoiceLibrary::execIsRemotePlayerTalking);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"MuteRemoteTalker",(Native)&UAdvancedVoiceLibrary::execMuteRemoteTalker);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"RegisterAllLocalTalkers",(Native)&UAdvancedVoiceLibrary::execRegisterAllLocalTalkers);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"RegisterLocalTalker",(Native)&UAdvancedVoiceLibrary::execRegisterLocalTalker);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"RegisterRemoteTalker",(Native)&UAdvancedVoiceLibrary::execRegisterRemoteTalker);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"RemoveAllRemoteTalkers",(Native)&UAdvancedVoiceLibrary::execRemoveAllRemoteTalkers);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"StartNetworkedVoice",(Native)&UAdvancedVoiceLibrary::execStartNetworkedVoice);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"StopNetworkedVoice",(Native)&UAdvancedVoiceLibrary::execStopNetworkedVoice);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"UnMuteRemoteTalker",(Native)&UAdvancedVoiceLibrary::execUnMuteRemoteTalker);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"UnRegisterAllLocalTalkers",(Native)&UAdvancedVoiceLibrary::execUnRegisterAllLocalTalkers);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"UnRegisterLocalTalker",(Native)&UAdvancedVoiceLibrary::execUnRegisterLocalTalker);
		FNativeFunctionRegistrar::RegisterFunction(UAdvancedVoiceLibrary::StaticClass(),"UnRegisterRemoteTalker",(Native)&UAdvancedVoiceLibrary::execUnRegisterRemoteTalker);
	}
	IMPLEMENT_CLASS(UAdvancedVoiceLibrary, 1501511805);
	void UCancelFindSessionsCallbackProxy::StaticRegisterNativesUCancelFindSessionsCallbackProxy()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCancelFindSessionsCallbackProxy::StaticClass(),"CancelFindSessions",(Native)&UCancelFindSessionsCallbackProxy::execCancelFindSessions);
	}
	IMPLEMENT_CLASS(UCancelFindSessionsCallbackProxy, 3763125496);
	void UCreateSessionCallbackProxyAdvanced::StaticRegisterNativesUCreateSessionCallbackProxyAdvanced()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCreateSessionCallbackProxyAdvanced::StaticClass(),"CreateAdvancedSession",(Native)&UCreateSessionCallbackProxyAdvanced::execCreateAdvancedSession);
	}
	IMPLEMENT_CLASS(UCreateSessionCallbackProxyAdvanced, 1753194857);
	void UEndSessionCallbackProxy::StaticRegisterNativesUEndSessionCallbackProxy()
	{
		FNativeFunctionRegistrar::RegisterFunction(UEndSessionCallbackProxy::StaticClass(),"EndSession",(Native)&UEndSessionCallbackProxy::execEndSession);
	}
	IMPLEMENT_CLASS(UEndSessionCallbackProxy, 1179970247);
	void UFindFriendSessionCallbackProxy::StaticRegisterNativesUFindFriendSessionCallbackProxy()
	{
		FNativeFunctionRegistrar::RegisterFunction(UFindFriendSessionCallbackProxy::StaticClass(),"FindFriendSession",(Native)&UFindFriendSessionCallbackProxy::execFindFriendSession);
	}
	IMPLEMENT_CLASS(UFindFriendSessionCallbackProxy, 2815730516);
	void UFindSessionsCallbackProxyAdvanced::StaticRegisterNativesUFindSessionsCallbackProxyAdvanced()
	{
		FNativeFunctionRegistrar::RegisterFunction(UFindSessionsCallbackProxyAdvanced::StaticClass(),"FilterSessionResults",(Native)&UFindSessionsCallbackProxyAdvanced::execFilterSessionResults);
		FNativeFunctionRegistrar::RegisterFunction(UFindSessionsCallbackProxyAdvanced::StaticClass(),"FindSessionsAdvanced",(Native)&UFindSessionsCallbackProxyAdvanced::execFindSessionsAdvanced);
	}
	IMPLEMENT_CLASS(UFindSessionsCallbackProxyAdvanced, 2257083438);
	void UGetFriendsCallbackProxy::StaticRegisterNativesUGetFriendsCallbackProxy()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGetFriendsCallbackProxy::StaticClass(),"GetAndStoreFriendsList",(Native)&UGetFriendsCallbackProxy::execGetAndStoreFriendsList);
	}
	IMPLEMENT_CLASS(UGetFriendsCallbackProxy, 2879570214);
	void UGetRecentPlayersCallbackProxy::StaticRegisterNativesUGetRecentPlayersCallbackProxy()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGetRecentPlayersCallbackProxy::StaticClass(),"GetAndStoreRecentPlayersList",(Native)&UGetRecentPlayersCallbackProxy::execGetAndStoreRecentPlayersList);
	}
	IMPLEMENT_CLASS(UGetRecentPlayersCallbackProxy, 1622346960);
	void USendFriendInviteCallbackProxy::StaticRegisterNativesUSendFriendInviteCallbackProxy()
	{
		FNativeFunctionRegistrar::RegisterFunction(USendFriendInviteCallbackProxy::StaticClass(),"SendFriendInvite",(Native)&USendFriendInviteCallbackProxy::execSendFriendInvite);
	}
	IMPLEMENT_CLASS(USendFriendInviteCallbackProxy, 694275024);
	void UUpdateSessionCallbackProxyAdvanced::StaticRegisterNativesUUpdateSessionCallbackProxyAdvanced()
	{
		FNativeFunctionRegistrar::RegisterFunction(UUpdateSessionCallbackProxyAdvanced::StaticClass(),"UpdateSession",(Native)&UUpdateSessionCallbackProxyAdvanced::execUpdateSession);
	}
	IMPLEMENT_CLASS(UUpdateSessionCallbackProxyAdvanced, 3941817306);
FName ADVANCEDSESSIONS_OnPlayerTalkingStateChanged = FName(TEXT("OnPlayerTalkingStateChanged"));
FName ADVANCEDSESSIONS_OnPlayerVoiceStateChanged = FName(TEXT("OnPlayerVoiceStateChanged"));
FName ADVANCEDSESSIONS_OnSessionInviteAccepted = FName(TEXT("OnSessionInviteAccepted"));
FName ADVANCEDSESSIONS_OnSessionInviteReceived = FName(TEXT("OnSessionInviteReceived"));
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();
	ONLINESUBSYSTEMUTILS_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintSessionResult();
	ENGINE_API class UClass* Z_Construct_UClass_UGameInstance();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2D_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerState_NoRegister();
	ONLINESUBSYSTEMUTILS_API class UClass* Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
	ONLINESUBSYSTEMUTILS_API class UFunction* Z_Construct_UDelegateFunction_OnlineSubsystemUtils_EmptyOnlineDelegate__DelegateSignature();
	ONLINESUBSYSTEMUTILS_API class UFunction* Z_Construct_UDelegateFunction_OnlineSubsystemUtils_BlueprintFindSessionsResultDelegate__DelegateSignature();

	ADVANCEDSESSIONS_API class UEnum* Z_Construct_UEnum_AdvancedSessions_EOnlineComparisonOpRedux();
	ADVANCEDSESSIONS_API class UEnum* Z_Construct_UEnum_AdvancedSessions_EBPOnlineSessionState();
	ADVANCEDSESSIONS_API class UEnum* Z_Construct_UEnum_AdvancedSessions_EBPOnlinePresenceState();
	ADVANCEDSESSIONS_API class UEnum* Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch();
	ADVANCEDSESSIONS_API class UEnum* Z_Construct_UEnum_AdvancedSessions_ESessionSettingSearchResult();
	ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FSessionsSearchSetting();
	ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FSessionPropertyKeyPair();
	ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FBPFriendInfo();
	ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FBPFriendPresenceInfo();
	ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FBPOnlineRecentPlayer();
	ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FBPOnlineUser();
	ADVANCEDSESSIONS_API class UScriptStruct* Z_Construct_UScriptStruct_FBPUniqueNetId();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowAccountUpgradeUI();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowFriendsUI();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowInviteUI();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowLeaderBoardUI();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowProfileUI();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowWebURLUI();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UAdvancedExternalUILibrary_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UAdvancedExternalUILibrary();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsInterface_OnPlayerVoiceStateChanged();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsInterface_OnSessionInviteAccepted();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsInterface_OnSessionInviteReceived();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UAdvancedFriendsInterface_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UAdvancedFriendsInterface();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsGameInstance_OnPlayerTalkingStateChanged();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsGameInstance_OnSessionInviteAccepted();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsGameInstance_OnSessionInviteReceived();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UAdvancedFriendsGameInstance_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UAdvancedFriendsGameInstance();
	ADVANCEDSESSIONS_API class UEnum* Z_Construct_UEnum_AdvancedSessions_SteamAvatarSize();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_GetFriend();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_GetFriendSteamLevel();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_GetSteamFriendAvatar();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_GetStoredFriendsList();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_GetStoredRecentPlayersList();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_IsAFriend();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_RequestSteamFriendInfo();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_SendSessionInviteToFriend();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_SendSessionInviteToFriends();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UAdvancedFriendsLibrary_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UAdvancedFriendsLibrary();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_AddOrModifyExtraSettings();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetCurrentUniqueBuildID();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetExtraSettings();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetNetPlayerIndex();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetNumberOfNetworkPlayers();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetPlayerName();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyBool();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyByte();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyFloat();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyInt();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyString();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionSettings();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionState();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetUniqueBuildID();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetUniqueNetID();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetUniqueNetIDFromPlayerState();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_HasOnlineSubsystem();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_IsPlayerInSession();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyBool();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyByte();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyFloat();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyInt();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyString();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionSearchProperty();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_SetPlayerName();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_UniqueNetIdToString();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UAdvancedSessionsLibrary_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UAdvancedSessionsLibrary();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_GetNumLocalTalkers();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_IsHeadsetPresent();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_IsLocalPlayerTalking();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_IsPlayerMuted();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_IsRemotePlayerTalking();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_MuteRemoteTalker();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_RegisterAllLocalTalkers();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_RegisterLocalTalker();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_RegisterRemoteTalker();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_RemoveAllRemoteTalkers();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_StartNetworkedVoice();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_StopNetworkedVoice();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_UnMuteRemoteTalker();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_UnRegisterAllLocalTalkers();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_UnRegisterLocalTalker();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_UnRegisterRemoteTalker();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UAdvancedVoiceLibrary_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UAdvancedVoiceLibrary();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UCancelFindSessionsCallbackProxy_CancelFindSessions();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UCancelFindSessionsCallbackProxy_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UCancelFindSessionsCallbackProxy();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UCreateSessionCallbackProxyAdvanced_CreateAdvancedSession();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UCreateSessionCallbackProxyAdvanced_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UCreateSessionCallbackProxyAdvanced();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UEndSessionCallbackProxy_EndSession();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UEndSessionCallbackProxy_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UEndSessionCallbackProxy();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintFindFriendSessionDelegate__DelegateSignature();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UFindFriendSessionCallbackProxy_FindFriendSession();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UFindFriendSessionCallbackProxy_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UFindFriendSessionCallbackProxy();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UFindSessionsCallbackProxyAdvanced_FilterSessionResults();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UFindSessionsCallbackProxyAdvanced_FindSessionsAdvanced();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UFindSessionsCallbackProxyAdvanced_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UFindSessionsCallbackProxyAdvanced();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintGetFriendsListDelegate__DelegateSignature();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UGetFriendsCallbackProxy_GetAndStoreFriendsList();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UGetFriendsCallbackProxy_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UGetFriendsCallbackProxy();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintGetRecentPlayersDelegate__DelegateSignature();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UGetRecentPlayersCallbackProxy_GetAndStoreRecentPlayersList();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UGetRecentPlayersCallbackProxy_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UGetRecentPlayersCallbackProxy();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintSendFriendInviteDelegate__DelegateSignature();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_USendFriendInviteCallbackProxy_SendFriendInvite();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_USendFriendInviteCallbackProxy_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_USendFriendInviteCallbackProxy();
	ADVANCEDSESSIONS_API class UFunction* Z_Construct_UFunction_UUpdateSessionCallbackProxyAdvanced_UpdateSession();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UUpdateSessionCallbackProxyAdvanced_NoRegister();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UUpdateSessionCallbackProxyAdvanced();
	ADVANCEDSESSIONS_API class UPackage* Z_Construct_UPackage_AdvancedSessions();
	UEnum* Z_Construct_UEnum_AdvancedSessions_EOnlineComparisonOpRedux()
	{
		UPackage* Outer=Z_Construct_UPackage_AdvancedSessions();
		extern uint32 Get_Z_Construct_UEnum_AdvancedSessions_EOnlineComparisonOpRedux_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EOnlineComparisonOpRedux"), 0, Get_Z_Construct_UEnum_AdvancedSessions_EOnlineComparisonOpRedux_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EOnlineComparisonOpRedux"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOnlineComparisonOpRedux::Equals")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOnlineComparisonOpRedux::NotEquals")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOnlineComparisonOpRedux::GreaterThan")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOnlineComparisonOpRedux::GreaterThanEquals")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOnlineComparisonOpRedux::LessThan")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOnlineComparisonOpRedux::LessThanEquals")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EOnlineComparisonOpRedux::EOnlineComparisonOpRedux_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("The types of comparison operations for a given search query // Used to compare session properties"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AdvancedSessions_EOnlineComparisonOpRedux_CRC() { return 1040744430U; }
	UEnum* Z_Construct_UEnum_AdvancedSessions_EBPOnlineSessionState()
	{
		UPackage* Outer=Z_Construct_UPackage_AdvancedSessions();
		extern uint32 Get_Z_Construct_UEnum_AdvancedSessions_EBPOnlineSessionState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EBPOnlineSessionState"), 0, Get_Z_Construct_UEnum_AdvancedSessions_EBPOnlineSessionState_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBPOnlineSessionState"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlineSessionState::NoSession")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlineSessionState::Creating")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlineSessionState::Pending")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlineSessionState::Starting")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlineSessionState::InProgress")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlineSessionState::Ending")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlineSessionState::Ended")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlineSessionState::Destroying")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlineSessionState::EBPOnlineSessionState_MAX")), 8));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Creating.ToolTip"), TEXT("An online session is in the process of being created"));
			MetaData->SetValue(ReturnEnum, TEXT("Destroying.ToolTip"), TEXT("The session is being destroyed"));
			MetaData->SetValue(ReturnEnum, TEXT("Ended.ToolTip"), TEXT("The session is closed and any stats committed"));
			MetaData->SetValue(ReturnEnum, TEXT("Ending.ToolTip"), TEXT("The session is still valid, but the session is no longer being played (post match lobby)"));
			MetaData->SetValue(ReturnEnum, TEXT("InProgress.ToolTip"), TEXT("The current session has started. Sessions with join in progress disabled are no longer joinable"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NoSession.ToolTip"), TEXT("An online session has not been created yet"));
			MetaData->SetValue(ReturnEnum, TEXT("Pending.ToolTip"), TEXT("Session has been created but the session hasn't started (pre match lobby)"));
			MetaData->SetValue(ReturnEnum, TEXT("Starting.ToolTip"), TEXT("Session has been asked to start (may take time due to communication with backend)"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AdvancedSessions_EBPOnlineSessionState_CRC() { return 3536879252U; }
	UEnum* Z_Construct_UEnum_AdvancedSessions_EBPOnlinePresenceState()
	{
		UPackage* Outer=Z_Construct_UPackage_AdvancedSessions();
		extern uint32 Get_Z_Construct_UEnum_AdvancedSessions_EBPOnlinePresenceState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EBPOnlinePresenceState"), 0, Get_Z_Construct_UEnum_AdvancedSessions_EBPOnlinePresenceState_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBPOnlinePresenceState"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlinePresenceState::Online")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlinePresenceState::Offline")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlinePresenceState::Away")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlinePresenceState::ExtendedAway")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlinePresenceState::DoNotDisturb")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlinePresenceState::Chat")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBPOnlinePresenceState::EBPOnlinePresenceState_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Wanted this to be switchable in the editor"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AdvancedSessions_EBPOnlinePresenceState_CRC() { return 2920708265U; }
	UEnum* Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch()
	{
		UPackage* Outer=Z_Construct_UPackage_AdvancedSessions();
		extern uint32 Get_Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("EBlueprintResultSwitch"), 0, Get_Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBlueprintResultSwitch"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBlueprintResultSwitch::OnSuccess")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBlueprintResultSwitch::OnFailure")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBlueprintResultSwitch::EBlueprintResultSwitch_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(ReturnEnum, TEXT("OnFailure.ToolTip"), TEXT("On Failure"));
			MetaData->SetValue(ReturnEnum, TEXT("OnSuccess.ToolTip"), TEXT("On Success"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("This makes a lot of the blueprint functions cleaner"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch_CRC() { return 3606564078U; }
	UEnum* Z_Construct_UEnum_AdvancedSessions_ESessionSettingSearchResult()
	{
		UPackage* Outer=Z_Construct_UPackage_AdvancedSessions();
		extern uint32 Get_Z_Construct_UEnum_AdvancedSessions_ESessionSettingSearchResult_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ESessionSettingSearchResult"), 0, Get_Z_Construct_UEnum_AdvancedSessions_ESessionSettingSearchResult_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESessionSettingSearchResult"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESessionSettingSearchResult::Found")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESessionSettingSearchResult::NotFound")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESessionSettingSearchResult::WrongType")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESessionSettingSearchResult::ESessionSettingSearchResult_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Found.ToolTip"), TEXT("Found the setting"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NotFound.ToolTip"), TEXT("Did not find the setting"));
			MetaData->SetValue(ReturnEnum, TEXT("WrongType.ToolTip"), TEXT("Was not the correct ype"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AdvancedSessions_ESessionSettingSearchResult_CRC() { return 1903177851U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSessionsSearchSetting()
	{
		UPackage* Outer=Z_Construct_UPackage_AdvancedSessions();
		extern uint32 Get_Z_Construct_UScriptStruct_FSessionsSearchSetting_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SessionsSearchSetting"), sizeof(FSessionsSearchSetting), Get_Z_Construct_UScriptStruct_FSessionsSearchSetting_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SessionsSearchSetting"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSessionsSearchSetting>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Sent to the FindSessionsAdvanced to filter the end results"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSessionsSearchSetting_CRC() { return 519742623U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSessionPropertyKeyPair()
	{
		UPackage* Outer=Z_Construct_UPackage_AdvancedSessions();
		extern uint32 Get_Z_Construct_UScriptStruct_FSessionPropertyKeyPair_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SessionPropertyKeyPair"), sizeof(FSessionPropertyKeyPair), Get_Z_Construct_UScriptStruct_FSessionPropertyKeyPair_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SessionPropertyKeyPair"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSessionPropertyKeyPair>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Used to store session properties before converting to FVariantData"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSessionPropertyKeyPair_CRC() { return 3948141152U; }
	UScriptStruct* Z_Construct_UScriptStruct_FBPFriendInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_AdvancedSessions();
		extern uint32 Get_Z_Construct_UScriptStruct_FBPFriendInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("BPFriendInfo"), sizeof(FBPFriendInfo), Get_Z_Construct_UScriptStruct_FBPFriendInfo_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BPFriendInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBPFriendInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_PresenceInfo = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PresenceInfo"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PresenceInfo, FBPFriendInfo), 0x0000000000000005, Z_Construct_UScriptStruct_FBPFriendPresenceInfo());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsPlayingSameGame, FBPFriendInfo, bool);
			UProperty* NewProp_bIsPlayingSameGame = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsPlayingSameGame"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsPlayingSameGame, FBPFriendInfo), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsPlayingSameGame, FBPFriendInfo), sizeof(bool), true);
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, FBPFriendInfo), 0x0000000000000005, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_OnlineState = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OnlineState"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(OnlineState, FBPFriendInfo), 0x0000000000000005, Z_Construct_UEnum_AdvancedSessions_EBPOnlinePresenceState());
			UProperty* NewProp_RealName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RealName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(RealName, FBPFriendInfo), 0x0000000000000005);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DisplayName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(DisplayName, FBPFriendInfo), 0x0000000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_PresenceInfo, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_PresenceInfo, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_bIsPlayingSameGame, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_bIsPlayingSameGame, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_UniqueNetId, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_UniqueNetId, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_OnlineState, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_OnlineState, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_RealName, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_RealName, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBPFriendInfo_CRC() { return 532006100U; }
	UScriptStruct* Z_Construct_UScriptStruct_FBPFriendPresenceInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_AdvancedSessions();
		extern uint32 Get_Z_Construct_UScriptStruct_FBPFriendPresenceInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("BPFriendPresenceInfo"), sizeof(FBPFriendPresenceInfo), Get_Z_Construct_UScriptStruct_FBPFriendPresenceInfo_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BPFriendPresenceInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBPFriendPresenceInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_StatusString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("StatusString"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(StatusString, FBPFriendPresenceInfo), 0x0000000000000005);
			UProperty* NewProp_PresenceState = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PresenceState"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(PresenceState, FBPFriendPresenceInfo), 0x0000000000000005, Z_Construct_UEnum_AdvancedSessions_EBPOnlinePresenceState());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHasVoiceSupport, FBPFriendPresenceInfo, bool);
			UProperty* NewProp_bHasVoiceSupport = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bHasVoiceSupport"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHasVoiceSupport, FBPFriendPresenceInfo), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bHasVoiceSupport, FBPFriendPresenceInfo), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsJoinable, FBPFriendPresenceInfo, bool);
			UProperty* NewProp_bIsJoinable = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsJoinable"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsJoinable, FBPFriendPresenceInfo), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsJoinable, FBPFriendPresenceInfo), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsPlayingThisGame, FBPFriendPresenceInfo, bool);
			UProperty* NewProp_bIsPlayingThisGame = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsPlayingThisGame"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsPlayingThisGame, FBPFriendPresenceInfo), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsPlayingThisGame, FBPFriendPresenceInfo), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsPlaying, FBPFriendPresenceInfo, bool);
			UProperty* NewProp_bIsPlaying = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsPlaying"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsPlaying, FBPFriendPresenceInfo), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsPlaying, FBPFriendPresenceInfo), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsOnline, FBPFriendPresenceInfo, bool);
			UProperty* NewProp_bIsOnline = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsOnline"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsOnline, FBPFriendPresenceInfo), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsOnline, FBPFriendPresenceInfo), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_StatusString, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_StatusString, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_PresenceState, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_PresenceState, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_bHasVoiceSupport, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_bHasVoiceSupport, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_bIsJoinable, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_bIsJoinable, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_bIsPlayingThisGame, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_bIsPlayingThisGame, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_bIsPlaying, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_bIsPlaying, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_bIsOnline, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_bIsOnline, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBPFriendPresenceInfo_CRC() { return 1389286297U; }
	UScriptStruct* Z_Construct_UScriptStruct_FBPOnlineRecentPlayer()
	{
		UPackage* Outer=Z_Construct_UPackage_AdvancedSessions();
		extern uint32 Get_Z_Construct_UScriptStruct_FBPOnlineRecentPlayer_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("BPOnlineRecentPlayer"), sizeof(FBPOnlineRecentPlayer), Get_Z_Construct_UScriptStruct_FBPOnlineRecentPlayer_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BPOnlineRecentPlayer"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FBPOnlineUser(), new UScriptStruct::TCppStructOps<FBPOnlineRecentPlayer>, EStructFlags(0x00000001));
			UProperty* NewProp_LastSeen = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LastSeen"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(LastSeen, FBPOnlineRecentPlayer), 0x0000000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_LastSeen, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_LastSeen, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBPOnlineRecentPlayer_CRC() { return 356899997U; }
	UScriptStruct* Z_Construct_UScriptStruct_FBPOnlineUser()
	{
		UPackage* Outer=Z_Construct_UPackage_AdvancedSessions();
		extern uint32 Get_Z_Construct_UScriptStruct_FBPOnlineUser_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("BPOnlineUser"), sizeof(FBPOnlineUser), Get_Z_Construct_UScriptStruct_FBPOnlineUser_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BPOnlineUser"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBPOnlineUser>, EStructFlags(0x00000001));
			UProperty* NewProp_RealName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RealName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(RealName, FBPOnlineUser), 0x0000000000000005);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DisplayName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(DisplayName, FBPOnlineUser), 0x0000000000000005);
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, FBPOnlineUser), 0x0000000000000005, Z_Construct_UScriptStruct_FBPUniqueNetId());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_RealName, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_RealName, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(NewProp_UniqueNetId, TEXT("Category"), TEXT("Online|Friend"));
			MetaData->SetValue(NewProp_UniqueNetId, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBPOnlineUser_CRC() { return 2723878796U; }
	UScriptStruct* Z_Construct_UScriptStruct_FBPUniqueNetId()
	{
		UPackage* Outer=Z_Construct_UPackage_AdvancedSessions();
		extern uint32 Get_Z_Construct_UScriptStruct_FBPUniqueNetId_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("BPUniqueNetId"), sizeof(FBPUniqueNetId), Get_Z_Construct_UScriptStruct_FBPUniqueNetId_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BPUniqueNetId"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBPUniqueNetId>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/BlueprintDataDefinitions.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Boy oh boy is this a dirty hack, but I can't figure out a good way to do it otherwise at the moment\nThe UniqueNetId is an abstract class so I can't exactly re-initialize it to make a shared pointer on some functions\nSo I made the blueprintable UniqueNetID into a dual variable struct with access functions and I am converting the const var for the pointer\nI really need to re-think this later"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBPUniqueNetId_CRC() { return 2890450691U; }
	UFunction* Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowAccountUpgradeUI()
	{
		struct AdvancedExternalUILibrary_eventShowAccountUpgradeUI_Parms
		{
			FBPUniqueNetId PlayerRequestingAccountUpgradeUI;
			TEnumAsByte<EBlueprintResultSwitch::Type> Result;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedExternalUILibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ShowAccountUpgradeUI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedExternalUILibrary_eventShowAccountUpgradeUI_Parms));
			UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Result"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Result, AdvancedExternalUILibrary_eventShowAccountUpgradeUI_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch());
			UProperty* NewProp_PlayerRequestingAccountUpgradeUI = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerRequestingAccountUpgradeUI"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PlayerRequestingAccountUpgradeUI, AdvancedExternalUILibrary_eventShowAccountUpgradeUI_Parms), 0x0000000000000082, Z_Construct_UScriptStruct_FBPUniqueNetId());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedExternalUI"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("Result"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedExternalUILibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Show the UI that shows the account upgrade UI (doesn't work with steam)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowFriendsUI()
	{
		struct AdvancedExternalUILibrary_eventShowFriendsUI_Parms
		{
			APlayerController* PlayerController;
			TEnumAsByte<EBlueprintResultSwitch::Type> Result;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedExternalUILibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ShowFriendsUI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedExternalUILibrary_eventShowFriendsUI_Parms));
			UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Result"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Result, AdvancedExternalUILibrary_eventShowFriendsUI_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedExternalUILibrary_eventShowFriendsUI_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedExternalUI"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("Result"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedExternalUILibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Show the UI that handles the Friends list"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowInviteUI()
	{
		struct AdvancedExternalUILibrary_eventShowInviteUI_Parms
		{
			APlayerController* PlayerController;
			TEnumAsByte<EBlueprintResultSwitch::Type> Result;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedExternalUILibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ShowInviteUI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedExternalUILibrary_eventShowInviteUI_Parms));
			UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Result"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Result, AdvancedExternalUILibrary_eventShowInviteUI_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedExternalUILibrary_eventShowInviteUI_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedExternalUI"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("Result"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedExternalUILibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Show the UI that handles inviting people to your game"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowLeaderBoardUI()
	{
		struct AdvancedExternalUILibrary_eventShowLeaderBoardUI_Parms
		{
			FString LeaderboardName;
			TEnumAsByte<EBlueprintResultSwitch::Type> Result;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedExternalUILibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ShowLeaderBoardUI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedExternalUILibrary_eventShowLeaderBoardUI_Parms));
			UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Result"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Result, AdvancedExternalUILibrary_eventShowLeaderBoardUI_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch());
			UProperty* NewProp_LeaderboardName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LeaderboardName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(LeaderboardName, AdvancedExternalUILibrary_eventShowLeaderBoardUI_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedExternalUI"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("Result"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedExternalUILibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Show the UI that shows the leaderboard (doesn't work with steam)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowProfileUI()
	{
		struct AdvancedExternalUILibrary_eventShowProfileUI_Parms
		{
			FBPUniqueNetId PlayerViewingProfile;
			FBPUniqueNetId PlayerToViewProfileOf;
			TEnumAsByte<EBlueprintResultSwitch::Type> Result;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedExternalUILibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ShowProfileUI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedExternalUILibrary_eventShowProfileUI_Parms));
			UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Result"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Result, AdvancedExternalUILibrary_eventShowProfileUI_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch());
			UProperty* NewProp_PlayerToViewProfileOf = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerToViewProfileOf"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PlayerToViewProfileOf, AdvancedExternalUILibrary_eventShowProfileUI_Parms), 0x0000000000000082, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_PlayerViewingProfile = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerViewingProfile"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PlayerViewingProfile, AdvancedExternalUILibrary_eventShowProfileUI_Parms), 0x0000000000000082, Z_Construct_UScriptStruct_FBPUniqueNetId());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedExternalUI"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("Result"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedExternalUILibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Show the UI that shows the profile of a uniquenetid"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowWebURLUI()
	{
		struct AdvancedExternalUILibrary_eventShowWebURLUI_Parms
		{
			FString URLToShow;
			TEnumAsByte<EBlueprintResultSwitch::Type> Result;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedExternalUILibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ShowWebURLUI"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedExternalUILibrary_eventShowWebURLUI_Parms));
			UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Result"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Result, AdvancedExternalUILibrary_eventShowWebURLUI_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch());
			UProperty* NewProp_URLToShow = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("URLToShow"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(URLToShow, AdvancedExternalUILibrary_eventShowWebURLUI_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedExternalUI"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("Result"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedExternalUILibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Show the UI that shows a web URL"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAdvancedExternalUILibrary_NoRegister()
	{
		return UAdvancedExternalUILibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UAdvancedExternalUILibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UAdvancedExternalUILibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowAccountUpgradeUI());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowFriendsUI());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowInviteUI());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowLeaderBoardUI());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowProfileUI());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowWebURLUI());

				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowAccountUpgradeUI()); // 3934870191
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowFriendsUI()); // 3646663125
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowInviteUI()); // 3212993189
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowLeaderBoardUI()); // 3464628806
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowProfileUI()); // 699716077
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedExternalUILibrary_ShowWebURLUI()); // 2069436525
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AdvancedExternalUILibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedExternalUILibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAdvancedExternalUILibrary(Z_Construct_UClass_UAdvancedExternalUILibrary, TEXT("UAdvancedExternalUILibrary"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAdvancedExternalUILibrary);
	UFunction* Z_Construct_UFunction_UAdvancedFriendsInterface_OnPlayerVoiceStateChanged()
	{
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsInterface();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPlayerVoiceStateChanged"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(AdvancedFriendsInterface_eventOnPlayerVoiceStateChanged_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsTalking, AdvancedFriendsInterface_eventOnPlayerVoiceStateChanged_Parms, bool);
			UProperty* NewProp_bIsTalking = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bIsTalking"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsTalking, AdvancedFriendsInterface_eventOnPlayerVoiceStateChanged_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bIsTalking, AdvancedFriendsInterface_eventOnPlayerVoiceStateChanged_Parms), sizeof(bool), true);
			UProperty* NewProp_PlayerId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PlayerId, AdvancedFriendsInterface_eventOnPlayerVoiceStateChanged_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FBPUniqueNetId());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("OnPlayerVoiceStateChanged"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsInterface.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called when the designated LocalUser has accepted a session invite, use JoinSession on result to connect"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedFriendsInterface_OnSessionInviteAccepted()
	{
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsInterface();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSessionInviteAccepted"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08420800, 65535, sizeof(AdvancedFriendsInterface_eventOnSessionInviteAccepted_Parms));
			UProperty* NewProp_SearchResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SearchResult"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SearchResult, AdvancedFriendsInterface_eventOnSessionInviteAccepted_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlueprintSessionResult());
			UProperty* NewProp_PersonInviting = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PersonInviting"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PersonInviting, AdvancedFriendsInterface_eventOnSessionInviteAccepted_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FBPUniqueNetId());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("OnSessionInviteAccepted"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsInterface.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called when the designated LocalUser has accepted a session invite, use JoinSession on result to connect"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedFriendsInterface_OnSessionInviteReceived()
	{
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsInterface();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSessionInviteReceived"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08420800, 65535, sizeof(AdvancedFriendsInterface_eventOnSessionInviteReceived_Parms));
			UProperty* NewProp_SearchResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SearchResult"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SearchResult, AdvancedFriendsInterface_eventOnSessionInviteReceived_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlueprintSessionResult());
			UProperty* NewProp_PersonInviting = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PersonInviting"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PersonInviting, AdvancedFriendsInterface_eventOnSessionInviteReceived_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FBPUniqueNetId());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("OnSessionInviteAccepted"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsInterface.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called when the designated LocalUser has accepted a session invite, use JoinSession on result to connect"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAdvancedFriendsInterface_NoRegister()
	{
		return UAdvancedFriendsInterface::StaticClass();
	}
	UClass* Z_Construct_UClass_UAdvancedFriendsInterface()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			UInterface::StaticClass();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UAdvancedFriendsInterface::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20084081;

				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsInterface_OnPlayerVoiceStateChanged());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsInterface_OnSessionInviteAccepted());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsInterface_OnSessionInviteReceived());

				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsInterface_OnPlayerVoiceStateChanged()); // 3183434682
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsInterface_OnSessionInviteAccepted()); // 1827312156
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsInterface_OnSessionInviteReceived()); // 1731489272
				OuterClass->StaticLink();
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAdvancedFriendsInterface(Z_Construct_UClass_UAdvancedFriendsInterface, TEXT("UAdvancedFriendsInterface"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAdvancedFriendsInterface);
	UFunction* Z_Construct_UFunction_UAdvancedFriendsGameInstance_OnPlayerTalkingStateChanged()
	{
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPlayerTalkingStateChanged"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(AdvancedFriendsGameInstance_eventOnPlayerTalkingStateChanged_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsTalking, AdvancedFriendsGameInstance_eventOnPlayerTalkingStateChanged_Parms, bool);
			UProperty* NewProp_bIsTalking = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bIsTalking"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsTalking, AdvancedFriendsGameInstance_eventOnPlayerTalkingStateChanged_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bIsTalking, AdvancedFriendsGameInstance_eventOnPlayerTalkingStateChanged_Parms), sizeof(bool), true);
			UProperty* NewProp_PlayerId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PlayerId, AdvancedFriendsGameInstance_eventOnPlayerTalkingStateChanged_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FBPUniqueNetId());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AdvancedVoice"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsGameInstance.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("After a voice status has changed this event is triggered if the bEnableTalkingStatusDelegate property is true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedFriendsGameInstance_OnSessionInviteAccepted()
	{
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSessionInviteAccepted"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08420800, 65535, sizeof(AdvancedFriendsGameInstance_eventOnSessionInviteAccepted_Parms));
			UProperty* NewProp_SessionToJoin = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SessionToJoin"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SessionToJoin, AdvancedFriendsGameInstance_eventOnSessionInviteAccepted_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlueprintSessionResult());
			UProperty* NewProp_PersonInviting = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PersonInviting"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PersonInviting, AdvancedFriendsGameInstance_eventOnSessionInviteAccepted_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_LocalPlayerNum = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocalPlayerNum"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(LocalPlayerNum, AdvancedFriendsGameInstance_eventOnSessionInviteAccepted_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AdvancedFriends"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsGameInstance.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("After a session invite has been accepted by the local player this event is triggered, call JoinSession on the session result to join it"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedFriendsGameInstance_OnSessionInviteReceived()
	{
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSessionInviteReceived"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08420800, 65535, sizeof(AdvancedFriendsGameInstance_eventOnSessionInviteReceived_Parms));
			UProperty* NewProp_SessionToJoin = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SessionToJoin"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SessionToJoin, AdvancedFriendsGameInstance_eventOnSessionInviteReceived_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlueprintSessionResult());
			UProperty* NewProp_AppId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AppId"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(AppId, AdvancedFriendsGameInstance_eventOnSessionInviteReceived_Parms), 0x0000000000000080);
			UProperty* NewProp_PersonInviting = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PersonInviting"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PersonInviting, AdvancedFriendsGameInstance_eventOnSessionInviteReceived_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_LocalPlayerNum = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocalPlayerNum"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(LocalPlayerNum, AdvancedFriendsGameInstance_eventOnSessionInviteReceived_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AdvancedFriends"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsGameInstance.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("After a session invite has been accepted by the local player this event is triggered, call JoinSession on the session result to join it"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAdvancedFriendsGameInstance_NoRegister()
	{
		return UAdvancedFriendsGameInstance::StaticClass();
	}
	UClass* Z_Construct_UClass_UAdvancedFriendsGameInstance()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGameInstance();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UAdvancedFriendsGameInstance::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000088;

				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsGameInstance_OnPlayerTalkingStateChanged());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsGameInstance_OnSessionInviteAccepted());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsGameInstance_OnSessionInviteReceived());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableTalkingStatusDelegate, UAdvancedFriendsGameInstance, bool);
				UProperty* NewProp_bEnableTalkingStatusDelegate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEnableTalkingStatusDelegate"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableTalkingStatusDelegate, UAdvancedFriendsGameInstance), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bEnableTalkingStatusDelegate, UAdvancedFriendsGameInstance), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCallVoiceInterfaceEventsOnPlayerControllers, UAdvancedFriendsGameInstance, bool);
				UProperty* NewProp_bCallVoiceInterfaceEventsOnPlayerControllers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCallVoiceInterfaceEventsOnPlayerControllers"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCallVoiceInterfaceEventsOnPlayerControllers, UAdvancedFriendsGameInstance), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bCallVoiceInterfaceEventsOnPlayerControllers, UAdvancedFriendsGameInstance), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCallFriendInterfaceEventsOnPlayerControllers, UAdvancedFriendsGameInstance, bool);
				UProperty* NewProp_bCallFriendInterfaceEventsOnPlayerControllers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCallFriendInterfaceEventsOnPlayerControllers"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCallFriendInterfaceEventsOnPlayerControllers, UAdvancedFriendsGameInstance), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bCallFriendInterfaceEventsOnPlayerControllers, UAdvancedFriendsGameInstance), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsGameInstance_OnPlayerTalkingStateChanged()); // 1016423061
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsGameInstance_OnSessionInviteAccepted()); // 3695224778
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsGameInstance_OnSessionInviteReceived()); // 1862859587
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AdvancedFriendsGameInstance.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsGameInstance.h"));
				MetaData->SetValue(NewProp_bEnableTalkingStatusDelegate, TEXT("Category"), TEXT("AdvancedVoiceInterface"));
				MetaData->SetValue(NewProp_bEnableTalkingStatusDelegate, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsGameInstance.h"));
				MetaData->SetValue(NewProp_bCallVoiceInterfaceEventsOnPlayerControllers, TEXT("Category"), TEXT("AdvancedFriendsInterface"));
				MetaData->SetValue(NewProp_bCallVoiceInterfaceEventsOnPlayerControllers, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsGameInstance.h"));
				MetaData->SetValue(NewProp_bCallFriendInterfaceEventsOnPlayerControllers, TEXT("Category"), TEXT("AdvancedFriendsInterface"));
				MetaData->SetValue(NewProp_bCallFriendInterfaceEventsOnPlayerControllers, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsGameInstance.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAdvancedFriendsGameInstance(Z_Construct_UClass_UAdvancedFriendsGameInstance, TEXT("UAdvancedFriendsGameInstance"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAdvancedFriendsGameInstance);
	UEnum* Z_Construct_UEnum_AdvancedSessions_SteamAvatarSize()
	{
		UPackage* Outer=Z_Construct_UPackage_AdvancedSessions();
		extern uint32 Get_Z_Construct_UEnum_AdvancedSessions_SteamAvatarSize_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SteamAvatarSize"), 0, Get_Z_Construct_UEnum_AdvancedSessions_SteamAvatarSize_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SteamAvatarSize"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SteamAvatar_Small")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SteamAvatar_Medium")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SteamAvatar_Large")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SteamAvatar_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsLibrary.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_AdvancedSessions_SteamAvatarSize_CRC() { return 2030644187U; }
	UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_GetFriend()
	{
		struct AdvancedFriendsLibrary_eventGetFriend_Parms
		{
			APlayerController* PlayerController;
			FBPUniqueNetId FriendUniqueNetId;
			FBPFriendInfo Friend;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFriend"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedFriendsLibrary_eventGetFriend_Parms));
			UProperty* NewProp_Friend = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Friend"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Friend, AdvancedFriendsLibrary_eventGetFriend_Parms), 0x0000000000000180, Z_Construct_UScriptStruct_FBPFriendInfo());
			UProperty* NewProp_FriendUniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FriendUniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(FriendUniqueNetId, AdvancedFriendsLibrary_eventGetFriend_Parms), 0x0000000000000082, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedFriendsLibrary_eventGetFriend_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedFriends|FriendsList"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get a friend from the previously read/saved friends list (Must Call GetFriends first for this to return anything)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_GetFriendSteamLevel()
	{
		struct AdvancedFriendsLibrary_eventGetFriendSteamLevel_Parms
		{
			APlayerController* PlayerController;
			FBPUniqueNetId UniqueNetId;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFriendSteamLevel"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AdvancedFriendsLibrary_eventGetFriendSteamLevel_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, AdvancedFriendsLibrary_eventGetFriendSteamLevel_Parms), 0x0000000000000580);
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedFriendsLibrary_eventGetFriendSteamLevel_Parms), 0x0000000000000082, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedFriendsLibrary_eventGetFriendSteamLevel_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedFriends|SteamAPI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Gets the level of a friends steam account, STEAM ONLY, Returns -1 if the steam level is not known, might need RequestSteamFriendInfo called first."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_GetSteamFriendAvatar()
	{
		struct AdvancedFriendsLibrary_eventGetSteamFriendAvatar_Parms
		{
			APlayerController* PlayerController;
			FBPUniqueNetId UniqueNetId;
			TEnumAsByte<SteamAvatarSize> AvatarSize;
			UTexture2D* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetSteamFriendAvatar"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AdvancedFriendsLibrary_eventGetSteamFriendAvatar_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, AdvancedFriendsLibrary_eventGetSteamFriendAvatar_Parms), 0x0000000000000580, Z_Construct_UClass_UTexture2D_NoRegister());
			UProperty* NewProp_AvatarSize = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AvatarSize"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(AvatarSize, AdvancedFriendsLibrary_eventGetSteamFriendAvatar_Parms), 0x0000000000000080, Z_Construct_UEnum_AdvancedSessions_SteamAvatarSize());
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedFriendsLibrary_eventGetSteamFriendAvatar_Parms), 0x0000000000000082, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedFriendsLibrary_eventGetSteamFriendAvatar_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedFriends|SteamAPI"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_AvatarSize"), TEXT("SteamAvatar_Medium"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get a texture of a valid friends avatar, STEAM ONLY, Returns invalid texture if the subsystem hasn't loaded that size of avatar yet"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_GetStoredFriendsList()
	{
		struct AdvancedFriendsLibrary_eventGetStoredFriendsList_Parms
		{
			APlayerController* PlayerController;
			TArray<FBPFriendInfo> FriendsList;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetStoredFriendsList"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedFriendsLibrary_eventGetStoredFriendsList_Parms));
			UProperty* NewProp_FriendsList = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FriendsList"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(FriendsList, AdvancedFriendsLibrary_eventGetStoredFriendsList_Parms), 0x0000000000000180);
			UProperty* NewProp_FriendsList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FriendsList, TEXT("FriendsList"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FBPFriendInfo());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedFriendsLibrary_eventGetStoredFriendsList_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedFriends|FriendsList"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the previously read/saved friends list (Must Call GetFriends first for this to return anything)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_GetStoredRecentPlayersList()
	{
		struct AdvancedFriendsLibrary_eventGetStoredRecentPlayersList_Parms
		{
			FBPUniqueNetId UniqueNetId;
			TArray<FBPOnlineRecentPlayer> PlayersList;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetStoredRecentPlayersList"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedFriendsLibrary_eventGetStoredRecentPlayersList_Parms));
			UProperty* NewProp_PlayersList = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayersList"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(PlayersList, AdvancedFriendsLibrary_eventGetStoredRecentPlayersList_Parms), 0x0000000000000180);
			UProperty* NewProp_PlayersList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PlayersList, TEXT("PlayersList"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FBPOnlineRecentPlayer());
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedFriendsLibrary_eventGetStoredRecentPlayersList_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FBPUniqueNetId());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedFriends|RecentPlayersList"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the previously read/saved recent players list (Must Call GetRecentPlayers first for this to return anything)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_IsAFriend()
	{
		struct AdvancedFriendsLibrary_eventIsAFriend_Parms
		{
			APlayerController* PlayerController;
			FBPUniqueNetId UniqueNetId;
			bool IsFriend;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsAFriend"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(AdvancedFriendsLibrary_eventIsAFriend_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsFriend, AdvancedFriendsLibrary_eventIsAFriend_Parms, bool);
			UProperty* NewProp_IsFriend = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsFriend"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsFriend, AdvancedFriendsLibrary_eventIsAFriend_Parms), 0x0000000000000180, CPP_BOOL_PROPERTY_BITMASK(IsFriend, AdvancedFriendsLibrary_eventIsAFriend_Parms), sizeof(bool), true);
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedFriendsLibrary_eventIsAFriend_Parms), 0x0000000000000082, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedFriendsLibrary_eventIsAFriend_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedFriends|FriendsList"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Check if a UniqueNetId is a friend"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_RequestSteamFriendInfo()
	{
		struct AdvancedFriendsLibrary_eventRequestSteamFriendInfo_Parms
		{
			APlayerController* PlayerController;
			FBPUniqueNetId UniqueNetId;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RequestSteamFriendInfo"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AdvancedFriendsLibrary_eventRequestSteamFriendInfo_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AdvancedFriendsLibrary_eventRequestSteamFriendInfo_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AdvancedFriendsLibrary_eventRequestSteamFriendInfo_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AdvancedFriendsLibrary_eventRequestSteamFriendInfo_Parms), sizeof(bool), true);
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedFriendsLibrary_eventRequestSteamFriendInfo_Parms), 0x0000000000000082, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedFriendsLibrary_eventRequestSteamFriendInfo_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedFriends|SteamAPI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Preloads the avatar and name of a steam friend, return whether it is already available or not, STEAM ONLY, Takes time to actually load everything after this is called."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_SendSessionInviteToFriend()
	{
		struct AdvancedFriendsLibrary_eventSendSessionInviteToFriend_Parms
		{
			APlayerController* PlayerController;
			FBPUniqueNetId FriendUniqueNetId;
			TEnumAsByte<EBlueprintResultSwitch::Type> Result;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendSessionInviteToFriend"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedFriendsLibrary_eventSendSessionInviteToFriend_Parms));
			UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Result"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Result, AdvancedFriendsLibrary_eventSendSessionInviteToFriend_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch());
			UProperty* NewProp_FriendUniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FriendUniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(FriendUniqueNetId, AdvancedFriendsLibrary_eventSendSessionInviteToFriend_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedFriendsLibrary_eventSendSessionInviteToFriend_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedFriends|FriendsList"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("Result"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sends an Invite to the current online session to a friend"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedFriendsLibrary_SendSessionInviteToFriends()
	{
		struct AdvancedFriendsLibrary_eventSendSessionInviteToFriends_Parms
		{
			APlayerController* PlayerController;
			TArray<FBPUniqueNetId> Friends;
			TEnumAsByte<EBlueprintResultSwitch::Type> Result;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedFriendsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendSessionInviteToFriends"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedFriendsLibrary_eventSendSessionInviteToFriends_Parms));
			UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Result"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Result, AdvancedFriendsLibrary_eventSendSessionInviteToFriends_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch());
			UProperty* NewProp_Friends = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Friends"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Friends, AdvancedFriendsLibrary_eventSendSessionInviteToFriends_Parms), 0x0000000008000182);
			UProperty* NewProp_Friends_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Friends, TEXT("Friends"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedFriendsLibrary_eventSendSessionInviteToFriends_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedFriends|FriendsList"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("Result"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sends an Invite to the current online session to a list of friends"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAdvancedFriendsLibrary_NoRegister()
	{
		return UAdvancedFriendsLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UAdvancedFriendsLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UAdvancedFriendsLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsLibrary_GetFriend());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsLibrary_GetFriendSteamLevel());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsLibrary_GetSteamFriendAvatar());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsLibrary_GetStoredFriendsList());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsLibrary_GetStoredRecentPlayersList());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsLibrary_IsAFriend());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsLibrary_RequestSteamFriendInfo());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsLibrary_SendSessionInviteToFriend());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedFriendsLibrary_SendSessionInviteToFriends());

				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsLibrary_GetFriend()); // 464087875
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsLibrary_GetFriendSteamLevel()); // 1392769292
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsLibrary_GetSteamFriendAvatar()); // 2184184404
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsLibrary_GetStoredFriendsList()); // 2414541535
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsLibrary_GetStoredRecentPlayersList()); // 2968285670
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsLibrary_IsAFriend()); // 4098107059
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsLibrary_RequestSteamFriendInfo()); // 2574986935
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsLibrary_SendSessionInviteToFriend()); // 588518800
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedFriendsLibrary_SendSessionInviteToFriends()); // 3779722843
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AdvancedFriendsLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedFriendsLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAdvancedFriendsLibrary(Z_Construct_UClass_UAdvancedFriendsLibrary, TEXT("UAdvancedFriendsLibrary"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAdvancedFriendsLibrary);
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_AddOrModifyExtraSettings()
	{
		struct AdvancedSessionsLibrary_eventAddOrModifyExtraSettings_Parms
		{
			TArray<FSessionPropertyKeyPair> SettingsArray;
			TArray<FSessionPropertyKeyPair> NewOrChangedSettings;
			TArray<FSessionPropertyKeyPair> ModifiedSettingsArray;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddOrModifyExtraSettings"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedSessionsLibrary_eventAddOrModifyExtraSettings_Parms));
			UProperty* NewProp_ModifiedSettingsArray = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ModifiedSettingsArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ModifiedSettingsArray, AdvancedSessionsLibrary_eventAddOrModifyExtraSettings_Parms), 0x0000000000000180);
			UProperty* NewProp_ModifiedSettingsArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ModifiedSettingsArray, TEXT("ModifiedSettingsArray"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			UProperty* NewProp_NewOrChangedSettings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewOrChangedSettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(NewOrChangedSettings, AdvancedSessionsLibrary_eventAddOrModifyExtraSettings_Parms), 0x0000000008000180);
			UProperty* NewProp_NewOrChangedSettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_NewOrChangedSettings, TEXT("NewOrChangedSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			UProperty* NewProp_SettingsArray = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SettingsArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SettingsArray, AdvancedSessionsLibrary_eventAddOrModifyExtraSettings_Parms), 0x0000000008000180);
			UProperty* NewProp_SettingsArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SettingsArray, TEXT("SettingsArray"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Adds or modifies session settings in an existing array depending on if they exist already or not"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetCurrentUniqueBuildID()
	{
		struct AdvancedSessionsLibrary_eventGetCurrentUniqueBuildID_Parms
		{
			int32 UniqueBuildId;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetCurrentUniqueBuildID"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetCurrentUniqueBuildID_Parms));
			UProperty* NewProp_UniqueBuildId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueBuildId"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(UniqueBuildId, AdvancedSessionsLibrary_eventGetCurrentUniqueBuildID_Parms), 0x0000000000000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the Unique Current Build ID"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetExtraSettings()
	{
		struct AdvancedSessionsLibrary_eventGetExtraSettings_Parms
		{
			FBlueprintSessionResult SessionResult;
			TArray<FSessionPropertyKeyPair> ExtraSettings;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetExtraSettings"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetExtraSettings_Parms));
			UProperty* NewProp_ExtraSettings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ExtraSettings, AdvancedSessionsLibrary_eventGetExtraSettings_Parms), 0x0000000000000180);
			UProperty* NewProp_ExtraSettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ExtraSettings, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			UProperty* NewProp_SessionResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SessionResult"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SessionResult, AdvancedSessionsLibrary_eventGetExtraSettings_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FBlueprintSessionResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get an array of the session settings from a session search result"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetNetPlayerIndex()
	{
		struct AdvancedSessionsLibrary_eventGetNetPlayerIndex_Parms
		{
			APlayerController* PlayerController;
			int32 NetPlayerIndex;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNetPlayerIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetNetPlayerIndex_Parms));
			UProperty* NewProp_NetPlayerIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NetPlayerIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NetPlayerIndex, AdvancedSessionsLibrary_eventGetNetPlayerIndex_Parms), 0x0000000000000180);
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedSessionsLibrary_eventGetNetPlayerIndex_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|PlayerInfo|Misc"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the network player index of the given controller"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetNumberOfNetworkPlayers()
	{
		struct AdvancedSessionsLibrary_eventGetNumberOfNetworkPlayers_Parms
		{
			UObject* WorldContextObject;
			int32 NumNetPlayers;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNumberOfNetworkPlayers"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetNumberOfNetworkPlayers_Parms));
			UProperty* NewProp_NumNetPlayers = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NumNetPlayers"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumNetPlayers, AdvancedSessionsLibrary_eventGetNumberOfNetworkPlayers_Parms), 0x0000000000000180);
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, AdvancedSessionsLibrary_eventGetNumberOfNetworkPlayers_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("bIgnoreSelf"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|PlayerInfo|Misc"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GetNumNetworkPlayers"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the number of network players"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetPlayerName()
	{
		struct AdvancedSessionsLibrary_eventGetPlayerName_Parms
		{
			APlayerController* PlayerController;
			FString PlayerName;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlayerName"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetPlayerName_Parms));
			UProperty* NewProp_PlayerName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PlayerName, AdvancedSessionsLibrary_eventGetPlayerName_Parms), 0x0000000000000180);
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedSessionsLibrary_eventGetPlayerName_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|PlayerInfo|PlayerName"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the player name of a network player attached to the given controller"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyBool()
	{
		struct AdvancedSessionsLibrary_eventGetSessionPropertyBool_Parms
		{
			TArray<FSessionPropertyKeyPair> ExtraSettings;
			FName SettingName;
			TEnumAsByte<ESessionSettingSearchResult::Type> SearchResult;
			bool SettingValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetSessionPropertyBool"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetSessionPropertyBool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SettingValue, AdvancedSessionsLibrary_eventGetSessionPropertyBool_Parms, bool);
			UProperty* NewProp_SettingValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SettingValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SettingValue, AdvancedSessionsLibrary_eventGetSessionPropertyBool_Parms), 0x0000000000000180, CPP_BOOL_PROPERTY_BITMASK(SettingValue, AdvancedSessionsLibrary_eventGetSessionPropertyBool_Parms), sizeof(bool), true);
			UProperty* NewProp_SearchResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SearchResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(SearchResult, AdvancedSessionsLibrary_eventGetSessionPropertyBool_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_ESessionSettingSearchResult());
			UProperty* NewProp_SettingName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SettingName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(SettingName, AdvancedSessionsLibrary_eventGetSessionPropertyBool_Parms), 0x0000000000000080);
			UProperty* NewProp_ExtraSettings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ExtraSettings, AdvancedSessionsLibrary_eventGetSessionPropertyBool_Parms), 0x0000000008000182);
			UProperty* NewProp_ExtraSettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ExtraSettings, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("SearchResult"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get session custom information key/value as Bool"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyByte()
	{
		struct AdvancedSessionsLibrary_eventGetSessionPropertyByte_Parms
		{
			TArray<FSessionPropertyKeyPair> ExtraSettings;
			FName SettingName;
			TEnumAsByte<ESessionSettingSearchResult::Type> SearchResult;
			uint8 SettingValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetSessionPropertyByte"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetSessionPropertyByte_Parms));
			UProperty* NewProp_SettingValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SettingValue"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(SettingValue, AdvancedSessionsLibrary_eventGetSessionPropertyByte_Parms), 0x0000000000000180);
			UProperty* NewProp_SearchResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SearchResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(SearchResult, AdvancedSessionsLibrary_eventGetSessionPropertyByte_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_ESessionSettingSearchResult());
			UProperty* NewProp_SettingName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SettingName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(SettingName, AdvancedSessionsLibrary_eventGetSessionPropertyByte_Parms), 0x0000000000000080);
			UProperty* NewProp_ExtraSettings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ExtraSettings, AdvancedSessionsLibrary_eventGetSessionPropertyByte_Parms), 0x0000000008000182);
			UProperty* NewProp_ExtraSettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ExtraSettings, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("SearchResult"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get session custom information key/value as Byte (For Enums)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyFloat()
	{
		struct AdvancedSessionsLibrary_eventGetSessionPropertyFloat_Parms
		{
			TArray<FSessionPropertyKeyPair> ExtraSettings;
			FName SettingName;
			TEnumAsByte<ESessionSettingSearchResult::Type> SearchResult;
			float SettingValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetSessionPropertyFloat"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetSessionPropertyFloat_Parms));
			UProperty* NewProp_SettingValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SettingValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SettingValue, AdvancedSessionsLibrary_eventGetSessionPropertyFloat_Parms), 0x0000000000000180);
			UProperty* NewProp_SearchResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SearchResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(SearchResult, AdvancedSessionsLibrary_eventGetSessionPropertyFloat_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_ESessionSettingSearchResult());
			UProperty* NewProp_SettingName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SettingName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(SettingName, AdvancedSessionsLibrary_eventGetSessionPropertyFloat_Parms), 0x0000000000000080);
			UProperty* NewProp_ExtraSettings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ExtraSettings, AdvancedSessionsLibrary_eventGetSessionPropertyFloat_Parms), 0x0000000008000182);
			UProperty* NewProp_ExtraSettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ExtraSettings, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("SearchResult"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get session custom information key/value as Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyInt()
	{
		struct AdvancedSessionsLibrary_eventGetSessionPropertyInt_Parms
		{
			TArray<FSessionPropertyKeyPair> ExtraSettings;
			FName SettingName;
			TEnumAsByte<ESessionSettingSearchResult::Type> SearchResult;
			int32 SettingValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetSessionPropertyInt"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetSessionPropertyInt_Parms));
			UProperty* NewProp_SettingValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SettingValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(SettingValue, AdvancedSessionsLibrary_eventGetSessionPropertyInt_Parms), 0x0000000000000180);
			UProperty* NewProp_SearchResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SearchResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(SearchResult, AdvancedSessionsLibrary_eventGetSessionPropertyInt_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_ESessionSettingSearchResult());
			UProperty* NewProp_SettingName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SettingName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(SettingName, AdvancedSessionsLibrary_eventGetSessionPropertyInt_Parms), 0x0000000000000080);
			UProperty* NewProp_ExtraSettings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ExtraSettings, AdvancedSessionsLibrary_eventGetSessionPropertyInt_Parms), 0x0000000008000182);
			UProperty* NewProp_ExtraSettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ExtraSettings, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("SearchResult"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get session custom information key/value as Int"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyString()
	{
		struct AdvancedSessionsLibrary_eventGetSessionPropertyString_Parms
		{
			TArray<FSessionPropertyKeyPair> ExtraSettings;
			FName SettingName;
			TEnumAsByte<ESessionSettingSearchResult::Type> SearchResult;
			FString SettingValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetSessionPropertyString"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetSessionPropertyString_Parms));
			UProperty* NewProp_SettingValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SettingValue"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(SettingValue, AdvancedSessionsLibrary_eventGetSessionPropertyString_Parms), 0x0000000000000180);
			UProperty* NewProp_SearchResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SearchResult"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(SearchResult, AdvancedSessionsLibrary_eventGetSessionPropertyString_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_ESessionSettingSearchResult());
			UProperty* NewProp_SettingName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SettingName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(SettingName, AdvancedSessionsLibrary_eventGetSessionPropertyString_Parms), 0x0000000000000080);
			UProperty* NewProp_ExtraSettings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ExtraSettings, AdvancedSessionsLibrary_eventGetSessionPropertyString_Parms), 0x0000000008000182);
			UProperty* NewProp_ExtraSettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ExtraSettings, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("SearchResult"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get session custom information key/value as String"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionSettings()
	{
		struct AdvancedSessionsLibrary_eventGetSessionSettings_Parms
		{
			int32 NumConnections;
			int32 NumPrivateConnections;
			bool bIsLAN;
			bool bIsDedicated;
			bool bIsAnticheatEnabled;
			int32 BuildUniqueID;
			TArray<FSessionPropertyKeyPair> ExtraSettings;
			TEnumAsByte<EBlueprintResultSwitch::Type> Result;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetSessionSettings"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetSessionSettings_Parms));
			UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Result"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Result, AdvancedSessionsLibrary_eventGetSessionSettings_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_EBlueprintResultSwitch());
			UProperty* NewProp_ExtraSettings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ExtraSettings, AdvancedSessionsLibrary_eventGetSessionSettings_Parms), 0x0000000000000180);
			UProperty* NewProp_ExtraSettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ExtraSettings, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			UProperty* NewProp_BuildUniqueID = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BuildUniqueID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(BuildUniqueID, AdvancedSessionsLibrary_eventGetSessionSettings_Parms), 0x0000000000000180);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsAnticheatEnabled, AdvancedSessionsLibrary_eventGetSessionSettings_Parms, bool);
			UProperty* NewProp_bIsAnticheatEnabled = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bIsAnticheatEnabled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsAnticheatEnabled, AdvancedSessionsLibrary_eventGetSessionSettings_Parms), 0x0000000000000180, CPP_BOOL_PROPERTY_BITMASK(bIsAnticheatEnabled, AdvancedSessionsLibrary_eventGetSessionSettings_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsDedicated, AdvancedSessionsLibrary_eventGetSessionSettings_Parms, bool);
			UProperty* NewProp_bIsDedicated = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bIsDedicated"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsDedicated, AdvancedSessionsLibrary_eventGetSessionSettings_Parms), 0x0000000000000180, CPP_BOOL_PROPERTY_BITMASK(bIsDedicated, AdvancedSessionsLibrary_eventGetSessionSettings_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsLAN, AdvancedSessionsLibrary_eventGetSessionSettings_Parms, bool);
			UProperty* NewProp_bIsLAN = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bIsLAN"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsLAN, AdvancedSessionsLibrary_eventGetSessionSettings_Parms), 0x0000000000000180, CPP_BOOL_PROPERTY_BITMASK(bIsLAN, AdvancedSessionsLibrary_eventGetSessionSettings_Parms), sizeof(bool), true);
			UProperty* NewProp_NumPrivateConnections = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NumPrivateConnections"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumPrivateConnections, AdvancedSessionsLibrary_eventGetSessionSettings_Parms), 0x0000000000000180);
			UProperty* NewProp_NumConnections = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NumConnections"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumConnections, AdvancedSessionsLibrary_eventGetSessionSettings_Parms), 0x0000000000000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ExpandEnumAsExecs"), TEXT("Result"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the current session settings"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionState()
	{
		struct AdvancedSessionsLibrary_eventGetSessionState_Parms
		{
			TEnumAsByte<EBPOnlineSessionState::Type> SessionState;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetSessionState"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetSessionState_Parms));
			UProperty* NewProp_SessionState = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SessionState"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(SessionState, AdvancedSessionsLibrary_eventGetSessionState_Parms), 0x0000000000000180, Z_Construct_UEnum_AdvancedSessions_EBPOnlineSessionState());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the current session state"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetUniqueBuildID()
	{
		struct AdvancedSessionsLibrary_eventGetUniqueBuildID_Parms
		{
			FBlueprintSessionResult SessionResult;
			int32 UniqueBuildId;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetUniqueBuildID"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetUniqueBuildID_Parms));
			UProperty* NewProp_UniqueBuildId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueBuildId"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(UniqueBuildId, AdvancedSessionsLibrary_eventGetUniqueBuildID_Parms), 0x0000000000000180);
			UProperty* NewProp_SessionResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SessionResult"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SessionResult, AdvancedSessionsLibrary_eventGetUniqueBuildID_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FBlueprintSessionResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the Unique Build ID from a session search result"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetUniqueNetID()
	{
		struct AdvancedSessionsLibrary_eventGetUniqueNetID_Parms
		{
			APlayerController* PlayerController;
			FBPUniqueNetId UniqueNetId;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetUniqueNetID"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetUniqueNetID_Parms));
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedSessionsLibrary_eventGetUniqueNetID_Parms), 0x0000000000000180, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedSessionsLibrary_eventGetUniqueNetID_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|PlayerInfo|PlayerID"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the unique net id of a network player attached to the given controller"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_GetUniqueNetIDFromPlayerState()
	{
		struct AdvancedSessionsLibrary_eventGetUniqueNetIDFromPlayerState_Parms
		{
			APlayerState* PlayerState;
			FBPUniqueNetId UniqueNetId;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetUniqueNetIDFromPlayerState"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(AdvancedSessionsLibrary_eventGetUniqueNetIDFromPlayerState_Parms));
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedSessionsLibrary_eventGetUniqueNetIDFromPlayerState_Parms), 0x0000000000000180, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_PlayerState = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerState"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerState, AdvancedSessionsLibrary_eventGetUniqueNetIDFromPlayerState_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerState_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|PlayerInfo|PlayerID"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the unique net id of a network player who is assigned the the given player state"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_HasOnlineSubsystem()
	{
		struct AdvancedSessionsLibrary_eventHasOnlineSubsystem_Parms
		{
			FName SubSystemName;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasOnlineSubsystem"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(AdvancedSessionsLibrary_eventHasOnlineSubsystem_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AdvancedSessionsLibrary_eventHasOnlineSubsystem_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AdvancedSessionsLibrary_eventHasOnlineSubsystem_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AdvancedSessionsLibrary_eventHasOnlineSubsystem_Parms), sizeof(bool), true);
			UProperty* NewProp_SubSystemName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SubSystemName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(SubSystemName, AdvancedSessionsLibrary_eventHasOnlineSubsystem_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|Misc"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Checks if the stated session subsystem is active"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_IsPlayerInSession()
	{
		struct AdvancedSessionsLibrary_eventIsPlayerInSession_Parms
		{
			FBPUniqueNetId PlayerToCheck;
			bool bIsInSession;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsPlayerInSession"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedSessionsLibrary_eventIsPlayerInSession_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsInSession, AdvancedSessionsLibrary_eventIsPlayerInSession_Parms, bool);
			UProperty* NewProp_bIsInSession = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bIsInSession"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsInSession, AdvancedSessionsLibrary_eventIsPlayerInSession_Parms), 0x0000000000000180, CPP_BOOL_PROPERTY_BITMASK(bIsInSession, AdvancedSessionsLibrary_eventIsPlayerInSession_Parms), sizeof(bool), true);
			UProperty* NewProp_PlayerToCheck = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerToCheck"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PlayerToCheck, AdvancedSessionsLibrary_eventIsPlayerInSession_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBPUniqueNetId());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Check if someone is in the current session"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyBool()
	{
		struct AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyBool_Parms
		{
			FName Key;
			bool Value;
			FSessionPropertyKeyPair ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MakeLiteralSessionPropertyBool"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyBool_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyBool_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Value, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyBool_Parms, bool);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Value, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyBool_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(Value, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyBool_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Key, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyBool_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo|Literals"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Make a literal session custom information key/value pair from Bool"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyByte()
	{
		struct AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyByte_Parms
		{
			FName Key;
			uint8 Value;
			FSessionPropertyKeyPair ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MakeLiteralSessionPropertyByte"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyByte_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyByte_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Value, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyByte_Parms), 0x0000000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Key, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyByte_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo|Literals"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Make a literal session custom information key/value pair from Byte (For Enums)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyFloat()
	{
		struct AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyFloat_Parms
		{
			FName Key;
			float Value;
			FSessionPropertyKeyPair ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MakeLiteralSessionPropertyFloat"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyFloat_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Value, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyFloat_Parms), 0x0000000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Key, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyFloat_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo|Literals"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Make a literal session custom information key/value pair from Float"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyInt()
	{
		struct AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyInt_Parms
		{
			FName Key;
			int32 Value;
			FSessionPropertyKeyPair ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MakeLiteralSessionPropertyInt"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyInt_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Value, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyInt_Parms), 0x0000000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Key, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyInt_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo|Literals"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Make a literal session custom information key/value pair from Int"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyString()
	{
		struct AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyString_Parms
		{
			FName Key;
			FString Value;
			FSessionPropertyKeyPair ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MakeLiteralSessionPropertyString"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyString_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Value, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyString_Parms), 0x0000000000000080);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Key, AdvancedSessionsLibrary_eventMakeLiteralSessionPropertyString_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo|Literals"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Make a literal session custom information key/value pair from String"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionSearchProperty()
	{
		struct AdvancedSessionsLibrary_eventMakeLiteralSessionSearchProperty_Parms
		{
			FSessionPropertyKeyPair SessionSearchProperty;
			TEnumAsByte<EOnlineComparisonOpRedux::Type> ComparisonOp;
			FSessionsSearchSetting ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MakeLiteralSessionSearchProperty"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(AdvancedSessionsLibrary_eventMakeLiteralSessionSearchProperty_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, AdvancedSessionsLibrary_eventMakeLiteralSessionSearchProperty_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FSessionsSearchSetting());
			UProperty* NewProp_ComparisonOp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ComparisonOp"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ComparisonOp, AdvancedSessionsLibrary_eventMakeLiteralSessionSearchProperty_Parms), 0x0000000000000080, Z_Construct_UEnum_AdvancedSessions_EOnlineComparisonOpRedux());
			UProperty* NewProp_SessionSearchProperty = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SessionSearchProperty"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SessionSearchProperty, AdvancedSessionsLibrary_eventMakeLiteralSessionSearchProperty_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|SessionInfo|Literals"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Make a literal session search parameter"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_SetPlayerName()
	{
		struct AdvancedSessionsLibrary_eventSetPlayerName_Parms
		{
			APlayerController* PlayerController;
			FString PlayerName;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPlayerName"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AdvancedSessionsLibrary_eventSetPlayerName_Parms));
			UProperty* NewProp_PlayerName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(PlayerName, AdvancedSessionsLibrary_eventSetPlayerName_Parms), 0x0000000000000080);
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, AdvancedSessionsLibrary_eventSetPlayerName_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|PlayerInfo|PlayerName"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set the player name of a network player attached to the given controller"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedSessionsLibrary_UniqueNetIdToString()
	{
		struct AdvancedSessionsLibrary_eventUniqueNetIdToString_Parms
		{
			FBPUniqueNetId UniqueNetId;
			FString String;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedSessionsLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UniqueNetIdToString"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(AdvancedSessionsLibrary_eventUniqueNetIdToString_Parms));
			UProperty* NewProp_String = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("String"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(String, AdvancedSessionsLibrary_eventUniqueNetIdToString_Parms), 0x0000000000000180);
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedSessionsLibrary_eventUniqueNetIdToString_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBPUniqueNetId());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions|UniqueNetId"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Check if a UniqueNetId is a friend"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAdvancedSessionsLibrary_NoRegister()
	{
		return UAdvancedSessionsLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UAdvancedSessionsLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UAdvancedSessionsLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_AddOrModifyExtraSettings());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetCurrentUniqueBuildID());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetExtraSettings());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetNetPlayerIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetNumberOfNetworkPlayers());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetPlayerName());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyBool());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyByte());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyString());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionSettings());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionState());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetUniqueBuildID());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetUniqueNetID());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetUniqueNetIDFromPlayerState());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_HasOnlineSubsystem());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_IsPlayerInSession());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyBool());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyByte());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyString());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionSearchProperty());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_SetPlayerName());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedSessionsLibrary_UniqueNetIdToString());

				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_AddOrModifyExtraSettings()); // 1752261059
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetCurrentUniqueBuildID()); // 1834369175
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetExtraSettings()); // 1710132833
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetNetPlayerIndex()); // 3003131432
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetNumberOfNetworkPlayers()); // 671626089
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetPlayerName()); // 3398779678
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyBool()); // 3282205171
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyByte()); // 2214906404
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyFloat()); // 79319846
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyInt()); // 1117520864
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionPropertyString()); // 1672164940
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionSettings()); // 2620381468
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetSessionState()); // 3058183686
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetUniqueBuildID()); // 3235003317
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetUniqueNetID()); // 3440293691
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_GetUniqueNetIDFromPlayerState()); // 2634601774
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_HasOnlineSubsystem()); // 1488804128
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_IsPlayerInSession()); // 655775165
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyBool()); // 1821284655
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyByte()); // 1632712724
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyFloat()); // 1317949516
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyInt()); // 1044479861
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionPropertyString()); // 1081948235
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_MakeLiteralSessionSearchProperty()); // 576170907
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_SetPlayerName()); // 186344440
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedSessionsLibrary_UniqueNetIdToString()); // 2361938629
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AdvancedSessionsLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedSessionsLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAdvancedSessionsLibrary(Z_Construct_UClass_UAdvancedSessionsLibrary, TEXT("UAdvancedSessionsLibrary"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAdvancedSessionsLibrary);
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_GetNumLocalTalkers()
	{
		struct AdvancedVoiceLibrary_eventGetNumLocalTalkers_Parms
		{
			int32 NumLocalTalkers;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNumLocalTalkers"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(AdvancedVoiceLibrary_eventGetNumLocalTalkers_Parms));
			UProperty* NewProp_NumLocalTalkers = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NumLocalTalkers"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumLocalTalkers, AdvancedVoiceLibrary_eventGetNumLocalTalkers_Parms), 0x0000000000000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice|VoiceInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Gets the number of local talkers for this system"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_IsHeadsetPresent()
	{
		struct AdvancedVoiceLibrary_eventIsHeadsetPresent_Parms
		{
			bool bHasHeadset;
			uint8 LocalPlayerNum;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsHeadsetPresent"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(AdvancedVoiceLibrary_eventIsHeadsetPresent_Parms));
			UProperty* NewProp_LocalPlayerNum = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocalPlayerNum"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LocalPlayerNum, AdvancedVoiceLibrary_eventIsHeadsetPresent_Parms), 0x0000000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHasHeadset, AdvancedVoiceLibrary_eventIsHeadsetPresent_Parms, bool);
			UProperty* NewProp_bHasHeadset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bHasHeadset"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHasHeadset, AdvancedVoiceLibrary_eventIsHeadsetPresent_Parms), 0x0000000000000180, CPP_BOOL_PROPERTY_BITMASK(bHasHeadset, AdvancedVoiceLibrary_eventIsHeadsetPresent_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice|VoiceInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_LocalPlayerNum"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get if a headset is present for the specified local user"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_IsLocalPlayerTalking()
	{
		struct AdvancedVoiceLibrary_eventIsLocalPlayerTalking_Parms
		{
			uint8 LocalPlayerNum;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsLocalPlayerTalking"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(AdvancedVoiceLibrary_eventIsLocalPlayerTalking_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AdvancedVoiceLibrary_eventIsLocalPlayerTalking_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AdvancedVoiceLibrary_eventIsLocalPlayerTalking_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AdvancedVoiceLibrary_eventIsLocalPlayerTalking_Parms), sizeof(bool), true);
			UProperty* NewProp_LocalPlayerNum = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocalPlayerNum"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LocalPlayerNum, AdvancedVoiceLibrary_eventIsLocalPlayerTalking_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice|VoiceInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns whether a local player is currently talking"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_IsPlayerMuted()
	{
		struct AdvancedVoiceLibrary_eventIsPlayerMuted_Parms
		{
			uint8 LocalUserNumChecking;
			FBPUniqueNetId UniqueNetId;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsPlayerMuted"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(AdvancedVoiceLibrary_eventIsPlayerMuted_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AdvancedVoiceLibrary_eventIsPlayerMuted_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AdvancedVoiceLibrary_eventIsPlayerMuted_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AdvancedVoiceLibrary_eventIsPlayerMuted_Parms), sizeof(bool), true);
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedVoiceLibrary_eventIsPlayerMuted_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_LocalUserNumChecking = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocalUserNumChecking"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LocalUserNumChecking, AdvancedVoiceLibrary_eventIsPlayerMuted_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice|VoiceInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns whether a player is muted for the specified local player"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_IsRemotePlayerTalking()
	{
		struct AdvancedVoiceLibrary_eventIsRemotePlayerTalking_Parms
		{
			FBPUniqueNetId UniqueNetId;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsRemotePlayerTalking"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(AdvancedVoiceLibrary_eventIsRemotePlayerTalking_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AdvancedVoiceLibrary_eventIsRemotePlayerTalking_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AdvancedVoiceLibrary_eventIsRemotePlayerTalking_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AdvancedVoiceLibrary_eventIsRemotePlayerTalking_Parms), sizeof(bool), true);
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedVoiceLibrary_eventIsRemotePlayerTalking_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBPUniqueNetId());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice|VoiceInfo"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns whether a remote player is currently talking"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_MuteRemoteTalker()
	{
		struct AdvancedVoiceLibrary_eventMuteRemoteTalker_Parms
		{
			uint8 LocalUserNum;
			FBPUniqueNetId UniqueNetId;
			bool bIsSystemWide;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MuteRemoteTalker"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedVoiceLibrary_eventMuteRemoteTalker_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AdvancedVoiceLibrary_eventMuteRemoteTalker_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AdvancedVoiceLibrary_eventMuteRemoteTalker_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AdvancedVoiceLibrary_eventMuteRemoteTalker_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsSystemWide, AdvancedVoiceLibrary_eventMuteRemoteTalker_Parms, bool);
			UProperty* NewProp_bIsSystemWide = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bIsSystemWide"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsSystemWide, AdvancedVoiceLibrary_eventMuteRemoteTalker_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bIsSystemWide, AdvancedVoiceLibrary_eventMuteRemoteTalker_Parms), sizeof(bool), true);
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedVoiceLibrary_eventMuteRemoteTalker_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_LocalUserNum = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocalUserNum"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LocalUserNum, AdvancedVoiceLibrary_eventMuteRemoteTalker_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bIsSystemWide"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Mutes the player associated with the uniquenetid for the specified local player, if IsSystemWide is true then it will attempt to mute globally for the player"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_RegisterAllLocalTalkers()
	{
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegisterAllLocalTalkers"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Registers all signed in players as local talkers"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_RegisterLocalTalker()
	{
		struct AdvancedVoiceLibrary_eventRegisterLocalTalker_Parms
		{
			uint8 LocalPlayerNum;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegisterLocalTalker"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AdvancedVoiceLibrary_eventRegisterLocalTalker_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AdvancedVoiceLibrary_eventRegisterLocalTalker_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AdvancedVoiceLibrary_eventRegisterLocalTalker_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AdvancedVoiceLibrary_eventRegisterLocalTalker_Parms), sizeof(bool), true);
			UProperty* NewProp_LocalPlayerNum = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocalPlayerNum"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LocalPlayerNum, AdvancedVoiceLibrary_eventRegisterLocalTalker_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_LocalPlayerNum"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Registers a local player as someone interested in voice data"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_RegisterRemoteTalker()
	{
		struct AdvancedVoiceLibrary_eventRegisterRemoteTalker_Parms
		{
			FBPUniqueNetId UniqueNetId;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RegisterRemoteTalker"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedVoiceLibrary_eventRegisterRemoteTalker_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AdvancedVoiceLibrary_eventRegisterRemoteTalker_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AdvancedVoiceLibrary_eventRegisterRemoteTalker_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AdvancedVoiceLibrary_eventRegisterRemoteTalker_Parms), sizeof(bool), true);
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedVoiceLibrary_eventRegisterRemoteTalker_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBPUniqueNetId());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Registers a remote player as a talker"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_RemoveAllRemoteTalkers()
	{
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RemoveAllRemoteTalkers"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UnRegisters all remote players as talkers"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_StartNetworkedVoice()
	{
		struct AdvancedVoiceLibrary_eventStartNetworkedVoice_Parms
		{
			uint8 LocalPlayerNum;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StartNetworkedVoice"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AdvancedVoiceLibrary_eventStartNetworkedVoice_Parms));
			UProperty* NewProp_LocalPlayerNum = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocalPlayerNum"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LocalPlayerNum, AdvancedVoiceLibrary_eventStartNetworkedVoice_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_LocalPlayerNum"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Starts networked voice, allows push to talk in coordination with StopNetworkedVoice"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_StopNetworkedVoice()
	{
		struct AdvancedVoiceLibrary_eventStopNetworkedVoice_Parms
		{
			uint8 LocalPlayerNum;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StopNetworkedVoice"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AdvancedVoiceLibrary_eventStopNetworkedVoice_Parms));
			UProperty* NewProp_LocalPlayerNum = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocalPlayerNum"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LocalPlayerNum, AdvancedVoiceLibrary_eventStopNetworkedVoice_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_LocalPlayerNum"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Stops networked voice, allows push to talk in coordination with StartNetworkedVoice"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_UnMuteRemoteTalker()
	{
		struct AdvancedVoiceLibrary_eventUnMuteRemoteTalker_Parms
		{
			uint8 LocalUserNum;
			FBPUniqueNetId UniqueNetId;
			bool bIsSystemWide;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnMuteRemoteTalker"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedVoiceLibrary_eventUnMuteRemoteTalker_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AdvancedVoiceLibrary_eventUnMuteRemoteTalker_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AdvancedVoiceLibrary_eventUnMuteRemoteTalker_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AdvancedVoiceLibrary_eventUnMuteRemoteTalker_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsSystemWide, AdvancedVoiceLibrary_eventUnMuteRemoteTalker_Parms, bool);
			UProperty* NewProp_bIsSystemWide = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bIsSystemWide"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsSystemWide, AdvancedVoiceLibrary_eventUnMuteRemoteTalker_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bIsSystemWide, AdvancedVoiceLibrary_eventUnMuteRemoteTalker_Parms), sizeof(bool), true);
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedVoiceLibrary_eventUnMuteRemoteTalker_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_LocalUserNum = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocalUserNum"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LocalUserNum, AdvancedVoiceLibrary_eventUnMuteRemoteTalker_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bIsSystemWide"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UnMutes the player associated with the uniquenetid for the specified local player, if IsSystemWide is true then it will attempt to unmute globally for the player"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_UnRegisterAllLocalTalkers()
	{
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnRegisterAllLocalTalkers"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UnRegisters all signed in players as local talkers"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_UnRegisterLocalTalker()
	{
		struct AdvancedVoiceLibrary_eventUnRegisterLocalTalker_Parms
		{
			uint8 LocalPlayerNum;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnRegisterLocalTalker"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(AdvancedVoiceLibrary_eventUnRegisterLocalTalker_Parms));
			UProperty* NewProp_LocalPlayerNum = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LocalPlayerNum"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(LocalPlayerNum, AdvancedVoiceLibrary_eventUnRegisterLocalTalker_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_LocalPlayerNum"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UnRegisters local player as a local talker"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UAdvancedVoiceLibrary_UnRegisterRemoteTalker()
	{
		struct AdvancedVoiceLibrary_eventUnRegisterRemoteTalker_Parms
		{
			FBPUniqueNetId UniqueNetId;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UAdvancedVoiceLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnRegisterRemoteTalker"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(AdvancedVoiceLibrary_eventUnRegisterRemoteTalker_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, AdvancedVoiceLibrary_eventUnRegisterRemoteTalker_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, AdvancedVoiceLibrary_eventUnRegisterRemoteTalker_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, AdvancedVoiceLibrary_eventUnRegisterRemoteTalker_Parms), sizeof(bool), true);
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, AdvancedVoiceLibrary_eventUnRegisterRemoteTalker_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBPUniqueNetId());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedVoice"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UnRegisters a remote player as a talker"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UAdvancedVoiceLibrary_NoRegister()
	{
		return UAdvancedVoiceLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UAdvancedVoiceLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UAdvancedVoiceLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_GetNumLocalTalkers());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_IsHeadsetPresent());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_IsLocalPlayerTalking());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_IsPlayerMuted());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_IsRemotePlayerTalking());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_MuteRemoteTalker());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_RegisterAllLocalTalkers());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_RegisterLocalTalker());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_RegisterRemoteTalker());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_RemoveAllRemoteTalkers());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_StartNetworkedVoice());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_StopNetworkedVoice());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_UnMuteRemoteTalker());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_UnRegisterAllLocalTalkers());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_UnRegisterLocalTalker());
				OuterClass->LinkChild(Z_Construct_UFunction_UAdvancedVoiceLibrary_UnRegisterRemoteTalker());

				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_GetNumLocalTalkers()); // 1751437273
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_IsHeadsetPresent()); // 89954079
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_IsLocalPlayerTalking()); // 2653435635
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_IsPlayerMuted()); // 816108087
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_IsRemotePlayerTalking()); // 396426412
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_MuteRemoteTalker()); // 328017191
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_RegisterAllLocalTalkers()); // 1361984256
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_RegisterLocalTalker()); // 1319580418
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_RegisterRemoteTalker()); // 1234654915
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_RemoveAllRemoteTalkers()); // 3465507038
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_StartNetworkedVoice()); // 355690988
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_StopNetworkedVoice()); // 3986655850
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_UnMuteRemoteTalker()); // 310485190
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_UnRegisterAllLocalTalkers()); // 304073372
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_UnRegisterLocalTalker()); // 1632419315
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UAdvancedVoiceLibrary_UnRegisterRemoteTalker()); // 3439804850
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AdvancedVoiceLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/AdvancedVoiceLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UAdvancedVoiceLibrary(Z_Construct_UClass_UAdvancedVoiceLibrary, TEXT("UAdvancedVoiceLibrary"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UAdvancedVoiceLibrary);
	UFunction* Z_Construct_UFunction_UCancelFindSessionsCallbackProxy_CancelFindSessions()
	{
		struct CancelFindSessionsCallbackProxy_eventCancelFindSessions_Parms
		{
			UObject* WorldContextObject;
			APlayerController* PlayerController;
			UCancelFindSessionsCallbackProxy* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UCancelFindSessionsCallbackProxy();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CancelFindSessions"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(CancelFindSessionsCallbackProxy_eventCancelFindSessions_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, CancelFindSessionsCallbackProxy_eventCancelFindSessions_Parms), 0x0000000000000580, Z_Construct_UClass_UCancelFindSessionsCallbackProxy_NoRegister());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, CancelFindSessionsCallbackProxy_eventCancelFindSessions_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, CancelFindSessionsCallbackProxy_eventCancelFindSessions_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CancelFindSessionsCallbackProxy.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Cancels finding sessions"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UCancelFindSessionsCallbackProxy_NoRegister()
	{
		return UCancelFindSessionsCallbackProxy::StaticClass();
	}
	UClass* Z_Construct_UClass_UCancelFindSessionsCallbackProxy()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UCancelFindSessionsCallbackProxy::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_UCancelFindSessionsCallbackProxy_CancelFindSessions());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnFailure = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnFailure"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnFailure, UCancelFindSessionsCallbackProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_OnlineSubsystemUtils_EmptyOnlineDelegate__DelegateSignature());
				UProperty* NewProp_OnSuccess = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSuccess"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSuccess, UCancelFindSessionsCallbackProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_OnlineSubsystemUtils_EmptyOnlineDelegate__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UCancelFindSessionsCallbackProxy_CancelFindSessions()); // 866364890
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CancelFindSessionsCallbackProxy.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/CancelFindSessionsCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ModuleRelativePath"), TEXT("Classes/CancelFindSessionsCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ToolTip"), TEXT("Called when there is an unsuccessful destroy"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ModuleRelativePath"), TEXT("Classes/CancelFindSessionsCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ToolTip"), TEXT("Called when there is a successful destroy"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCancelFindSessionsCallbackProxy(Z_Construct_UClass_UCancelFindSessionsCallbackProxy, TEXT("UCancelFindSessionsCallbackProxy"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCancelFindSessionsCallbackProxy);
	UFunction* Z_Construct_UFunction_UCreateSessionCallbackProxyAdvanced_CreateAdvancedSession()
	{
		struct CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms
		{
			UObject* WorldContextObject;
			TArray<FSessionPropertyKeyPair> ExtraSettings;
			APlayerController* PlayerController;
			int32 PublicConnections;
			int32 PrivateConnections;
			bool bUseLAN;
			bool bAllowInvites;
			bool bIsDedicatedServer;
			bool bUsePresence;
			bool bAllowJoinViaPresence;
			bool bAllowJoinViaPresenceFriendsOnly;
			bool bAntiCheatProtected;
			bool bUsesStats;
			bool bShouldAdvertise;
			UCreateSessionCallbackProxyAdvanced* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UCreateSessionCallbackProxyAdvanced();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateAdvancedSession"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000580, Z_Construct_UClass_UCreateSessionCallbackProxyAdvanced_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShouldAdvertise, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms, bool);
			UProperty* NewProp_bShouldAdvertise = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bShouldAdvertise"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShouldAdvertise, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bShouldAdvertise, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUsesStats, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms, bool);
			UProperty* NewProp_bUsesStats = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bUsesStats"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUsesStats, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bUsesStats, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAntiCheatProtected, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms, bool);
			UProperty* NewProp_bAntiCheatProtected = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAntiCheatProtected"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAntiCheatProtected, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bAntiCheatProtected, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowJoinViaPresenceFriendsOnly, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms, bool);
			UProperty* NewProp_bAllowJoinViaPresenceFriendsOnly = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAllowJoinViaPresenceFriendsOnly"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowJoinViaPresenceFriendsOnly, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bAllowJoinViaPresenceFriendsOnly, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowJoinViaPresence, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms, bool);
			UProperty* NewProp_bAllowJoinViaPresence = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAllowJoinViaPresence"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowJoinViaPresence, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bAllowJoinViaPresence, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUsePresence, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms, bool);
			UProperty* NewProp_bUsePresence = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bUsePresence"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUsePresence, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bUsePresence, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsDedicatedServer, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms, bool);
			UProperty* NewProp_bIsDedicatedServer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bIsDedicatedServer"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsDedicatedServer, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bIsDedicatedServer, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowInvites, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms, bool);
			UProperty* NewProp_bAllowInvites = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAllowInvites"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowInvites, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bAllowInvites, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseLAN, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms, bool);
			UProperty* NewProp_bUseLAN = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bUseLAN"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseLAN, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bUseLAN, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), sizeof(bool), true);
			UProperty* NewProp_PrivateConnections = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PrivateConnections"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PrivateConnections, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000080);
			UProperty* NewProp_PublicConnections = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PublicConnections"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PublicConnections, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000080);
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			UProperty* NewProp_ExtraSettings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ExtraSettings, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000008000182);
			UProperty* NewProp_ExtraSettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ExtraSettings, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, CreateSessionCallbackProxyAdvanced_eventCreateAdvancedSession_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AutoCreateRefTerm"), TEXT("ExtraSettings"));
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bAllowInvites"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bAllowJoinViaPresence"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bAllowJoinViaPresenceFriendsOnly"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bAntiCheatProtected"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bIsDedicatedServer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bShouldAdvertise"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bUseLAN"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bUsePresence"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bUsesStats"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_PrivateConnections"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_PublicConnections"), TEXT("100"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/CreateSessionCallbackProxyAdvanced.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates a session with the default online subsystem with advanced optional inputs"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UCreateSessionCallbackProxyAdvanced_NoRegister()
	{
		return UCreateSessionCallbackProxyAdvanced::StaticClass();
	}
	UClass* Z_Construct_UClass_UCreateSessionCallbackProxyAdvanced()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UCreateSessionCallbackProxyAdvanced::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_UCreateSessionCallbackProxyAdvanced_CreateAdvancedSession());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnFailure = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnFailure"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnFailure, UCreateSessionCallbackProxyAdvanced), 0x0000000010080000, Z_Construct_UDelegateFunction_OnlineSubsystemUtils_EmptyOnlineDelegate__DelegateSignature());
				UProperty* NewProp_OnSuccess = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSuccess"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSuccess, UCreateSessionCallbackProxyAdvanced), 0x0000000010080000, Z_Construct_UDelegateFunction_OnlineSubsystemUtils_EmptyOnlineDelegate__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UCreateSessionCallbackProxyAdvanced_CreateAdvancedSession()); // 3578031886
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CreateSessionCallbackProxyAdvanced.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/CreateSessionCallbackProxyAdvanced.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ModuleRelativePath"), TEXT("Classes/CreateSessionCallbackProxyAdvanced.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ToolTip"), TEXT("Called when there was an error creating the session"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ModuleRelativePath"), TEXT("Classes/CreateSessionCallbackProxyAdvanced.h"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ToolTip"), TEXT("Called when the session was created successfully"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UCreateSessionCallbackProxyAdvanced(Z_Construct_UClass_UCreateSessionCallbackProxyAdvanced, TEXT("UCreateSessionCallbackProxyAdvanced"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UCreateSessionCallbackProxyAdvanced);
	UFunction* Z_Construct_UFunction_UEndSessionCallbackProxy_EndSession()
	{
		struct EndSessionCallbackProxy_eventEndSession_Parms
		{
			UObject* WorldContextObject;
			APlayerController* PlayerController;
			UEndSessionCallbackProxy* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UEndSessionCallbackProxy();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EndSession"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(EndSessionCallbackProxy_eventEndSession_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, EndSessionCallbackProxy_eventEndSession_Parms), 0x0000000000000580, Z_Construct_UClass_UEndSessionCallbackProxy_NoRegister());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, EndSessionCallbackProxy_eventEndSession_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, EndSessionCallbackProxy_eventEndSession_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/EndSessionCallbackProxy.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Ends the current session"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UEndSessionCallbackProxy_NoRegister()
	{
		return UEndSessionCallbackProxy::StaticClass();
	}
	UClass* Z_Construct_UClass_UEndSessionCallbackProxy()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UEndSessionCallbackProxy::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_UEndSessionCallbackProxy_EndSession());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnFailure = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnFailure"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnFailure, UEndSessionCallbackProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_OnlineSubsystemUtils_EmptyOnlineDelegate__DelegateSignature());
				UProperty* NewProp_OnSuccess = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSuccess"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSuccess, UEndSessionCallbackProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_OnlineSubsystemUtils_EmptyOnlineDelegate__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UEndSessionCallbackProxy_EndSession()); // 2279293652
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EndSessionCallbackProxy.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EndSessionCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ModuleRelativePath"), TEXT("Classes/EndSessionCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ToolTip"), TEXT("Called when there is an unsuccessful destroy"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ModuleRelativePath"), TEXT("Classes/EndSessionCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ToolTip"), TEXT("Called when there is a successful destroy"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEndSessionCallbackProxy(Z_Construct_UClass_UEndSessionCallbackProxy, TEXT("UEndSessionCallbackProxy"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEndSessionCallbackProxy);
	UFunction* Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintFindFriendSessionDelegate__DelegateSignature()
	{
		struct _Script_AdvancedSessions_eventBlueprintFindFriendSessionDelegate_Parms
		{
			FBlueprintSessionResult SessionInfo;
		};
		UObject* Outer=Z_Construct_UPackage_AdvancedSessions();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BlueprintFindFriendSessionDelegate__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_AdvancedSessions_eventBlueprintFindFriendSessionDelegate_Parms));
			UProperty* NewProp_SessionInfo = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SessionInfo"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SessionInfo, _Script_AdvancedSessions_eventBlueprintFindFriendSessionDelegate_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBlueprintSessionResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FindFriendSessionCallbackProxy.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UFindFriendSessionCallbackProxy_FindFriendSession()
	{
		struct FindFriendSessionCallbackProxy_eventFindFriendSession_Parms
		{
			UObject* WorldContextObject;
			APlayerController* PlayerController;
			FBPUniqueNetId FriendUniqueNetId;
			UFindFriendSessionCallbackProxy* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UFindFriendSessionCallbackProxy();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FindFriendSession"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(FindFriendSessionCallbackProxy_eventFindFriendSession_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, FindFriendSessionCallbackProxy_eventFindFriendSession_Parms), 0x0000000000000580, Z_Construct_UClass_UFindFriendSessionCallbackProxy_NoRegister());
			UProperty* NewProp_FriendUniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FriendUniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(FriendUniqueNetId, FindFriendSessionCallbackProxy_eventFindFriendSession_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, FindFriendSessionCallbackProxy_eventFindFriendSession_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, FindFriendSessionCallbackProxy_eventFindFriendSession_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedFriends"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FindFriendSessionCallbackProxy.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Attempts to get the current session that a friend is in"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UFindFriendSessionCallbackProxy_NoRegister()
	{
		return UFindFriendSessionCallbackProxy::StaticClass();
	}
	UClass* Z_Construct_UClass_UFindFriendSessionCallbackProxy()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UFindFriendSessionCallbackProxy::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_UFindFriendSessionCallbackProxy_FindFriendSession());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnFailure = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnFailure"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnFailure, UFindFriendSessionCallbackProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintFindFriendSessionDelegate__DelegateSignature());
				UProperty* NewProp_OnSuccess = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSuccess"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSuccess, UFindFriendSessionCallbackProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintFindFriendSessionDelegate__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UFindFriendSessionCallbackProxy_FindFriendSession()); // 1598151324
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("FindFriendSessionCallbackProxy.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/FindFriendSessionCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ModuleRelativePath"), TEXT("Classes/FindFriendSessionCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ToolTip"), TEXT("Called when there was an error retrieving the friends list"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ModuleRelativePath"), TEXT("Classes/FindFriendSessionCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ToolTip"), TEXT("Called when the friends list successfully was retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFindFriendSessionCallbackProxy(Z_Construct_UClass_UFindFriendSessionCallbackProxy, TEXT("UFindFriendSessionCallbackProxy"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFindFriendSessionCallbackProxy);
	UFunction* Z_Construct_UFunction_UFindSessionsCallbackProxyAdvanced_FilterSessionResults()
	{
		struct FindSessionsCallbackProxyAdvanced_eventFilterSessionResults_Parms
		{
			TArray<FBlueprintSessionResult> SessionResults;
			TArray<FSessionsSearchSetting> Filters;
			TArray<FBlueprintSessionResult> FilteredResults;
		};
		UObject* Outer=Z_Construct_UClass_UFindSessionsCallbackProxyAdvanced();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FilterSessionResults"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(FindSessionsCallbackProxyAdvanced_eventFilterSessionResults_Parms));
			UProperty* NewProp_FilteredResults = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FilteredResults"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(FilteredResults, FindSessionsCallbackProxyAdvanced_eventFilterSessionResults_Parms), 0x0000000000000180);
			UProperty* NewProp_FilteredResults_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FilteredResults, TEXT("FilteredResults"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FBlueprintSessionResult());
			UProperty* NewProp_Filters = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Filters"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Filters, FindSessionsCallbackProxyAdvanced_eventFilterSessionResults_Parms), 0x0000000008000182);
			UProperty* NewProp_Filters_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Filters, TEXT("Filters"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionsSearchSetting());
			UProperty* NewProp_SessionResults = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SessionResults"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SessionResults, FindSessionsCallbackProxyAdvanced_eventFilterSessionResults_Parms), 0x0000000008000182);
			UProperty* NewProp_SessionResults_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SessionResults, TEXT("SessionResults"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FBlueprintSessionResult());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FindSessionsCallbackProxyAdvanced.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Filters an array of session results by the given search parameters, returns a new array with the filtered results"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UFindSessionsCallbackProxyAdvanced_FindSessionsAdvanced()
	{
		struct FindSessionsCallbackProxyAdvanced_eventFindSessionsAdvanced_Parms
		{
			UObject* WorldContextObject;
			APlayerController* PlayerController;
			int32 MaxResults;
			bool bUseLAN;
			TArray<FSessionsSearchSetting> Filters;
			UFindSessionsCallbackProxyAdvanced* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UFindSessionsCallbackProxyAdvanced();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FindSessionsAdvanced"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(FindSessionsCallbackProxyAdvanced_eventFindSessionsAdvanced_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, FindSessionsCallbackProxyAdvanced_eventFindSessionsAdvanced_Parms), 0x0000000000000580, Z_Construct_UClass_UFindSessionsCallbackProxyAdvanced_NoRegister());
			UProperty* NewProp_Filters = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Filters"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Filters, FindSessionsCallbackProxyAdvanced_eventFindSessionsAdvanced_Parms), 0x0000000008000182);
			UProperty* NewProp_Filters_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Filters, TEXT("Filters"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionsSearchSetting());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseLAN, FindSessionsCallbackProxyAdvanced_eventFindSessionsAdvanced_Parms, bool);
			UProperty* NewProp_bUseLAN = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bUseLAN"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseLAN, FindSessionsCallbackProxyAdvanced_eventFindSessionsAdvanced_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bUseLAN, FindSessionsCallbackProxyAdvanced_eventFindSessionsAdvanced_Parms), sizeof(bool), true);
			UProperty* NewProp_MaxResults = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MaxResults"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MaxResults, FindSessionsCallbackProxyAdvanced_eventFindSessionsAdvanced_Parms), 0x0000000000000080);
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, FindSessionsCallbackProxyAdvanced_eventFindSessionsAdvanced_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, FindSessionsCallbackProxyAdvanced_eventFindSessionsAdvanced_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AutoCreateRefTerm"), TEXT("Filters"));
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/FindSessionsCallbackProxyAdvanced.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Searches for advertised sessions with the default online subsystem and includes an array of filters"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UFindSessionsCallbackProxyAdvanced_NoRegister()
	{
		return UFindSessionsCallbackProxyAdvanced::StaticClass();
	}
	UClass* Z_Construct_UClass_UFindSessionsCallbackProxyAdvanced()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UFindSessionsCallbackProxyAdvanced::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_UFindSessionsCallbackProxyAdvanced_FilterSessionResults());
				OuterClass->LinkChild(Z_Construct_UFunction_UFindSessionsCallbackProxyAdvanced_FindSessionsAdvanced());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnFailure = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnFailure"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnFailure, UFindSessionsCallbackProxyAdvanced), 0x0000000010080000, Z_Construct_UDelegateFunction_OnlineSubsystemUtils_BlueprintFindSessionsResultDelegate__DelegateSignature());
				UProperty* NewProp_OnSuccess = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSuccess"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSuccess, UFindSessionsCallbackProxyAdvanced), 0x0000000010080000, Z_Construct_UDelegateFunction_OnlineSubsystemUtils_BlueprintFindSessionsResultDelegate__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UFindSessionsCallbackProxyAdvanced_FilterSessionResults()); // 792609221
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UFindSessionsCallbackProxyAdvanced_FindSessionsAdvanced()); // 3448212213
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("FindSessionsCallbackProxyAdvanced.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/FindSessionsCallbackProxyAdvanced.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ModuleRelativePath"), TEXT("Classes/FindSessionsCallbackProxyAdvanced.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ToolTip"), TEXT("Called when there is an unsuccessful query"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ModuleRelativePath"), TEXT("Classes/FindSessionsCallbackProxyAdvanced.h"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ToolTip"), TEXT("Called when there is a successful query"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFindSessionsCallbackProxyAdvanced(Z_Construct_UClass_UFindSessionsCallbackProxyAdvanced, TEXT("UFindSessionsCallbackProxyAdvanced"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFindSessionsCallbackProxyAdvanced);
	UFunction* Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintGetFriendsListDelegate__DelegateSignature()
	{
		struct _Script_AdvancedSessions_eventBlueprintGetFriendsListDelegate_Parms
		{
			TArray<FBPFriendInfo> Results;
		};
		UObject* Outer=Z_Construct_UPackage_AdvancedSessions();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BlueprintGetFriendsListDelegate__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_AdvancedSessions_eventBlueprintGetFriendsListDelegate_Parms));
			UProperty* NewProp_Results = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Results"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Results, _Script_AdvancedSessions_eventBlueprintGetFriendsListDelegate_Parms), 0x0000000008000182);
			UProperty* NewProp_Results_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Results, TEXT("Results"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FBPFriendInfo());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/GetFriendsCallbackProxy.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGetFriendsCallbackProxy_GetAndStoreFriendsList()
	{
		struct GetFriendsCallbackProxy_eventGetAndStoreFriendsList_Parms
		{
			UObject* WorldContextObject;
			APlayerController* PlayerController;
			UGetFriendsCallbackProxy* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGetFriendsCallbackProxy();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetAndStoreFriendsList"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GetFriendsCallbackProxy_eventGetAndStoreFriendsList_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GetFriendsCallbackProxy_eventGetAndStoreFriendsList_Parms), 0x0000000000000580, Z_Construct_UClass_UGetFriendsCallbackProxy_NoRegister());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, GetFriendsCallbackProxy_eventGetAndStoreFriendsList_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, GetFriendsCallbackProxy_eventGetAndStoreFriendsList_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedFriends"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/GetFriendsCallbackProxy.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Gets the players list of friends from the OnlineSubsystem and returns it, can be retrieved later with GetStoredFriendsList"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGetFriendsCallbackProxy_NoRegister()
	{
		return UGetFriendsCallbackProxy::StaticClass();
	}
	UClass* Z_Construct_UClass_UGetFriendsCallbackProxy()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UGetFriendsCallbackProxy::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGetFriendsCallbackProxy_GetAndStoreFriendsList());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnFailure = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnFailure"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnFailure, UGetFriendsCallbackProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintGetFriendsListDelegate__DelegateSignature());
				UProperty* NewProp_OnSuccess = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSuccess"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSuccess, UGetFriendsCallbackProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintGetFriendsListDelegate__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UGetFriendsCallbackProxy_GetAndStoreFriendsList()); // 3182120129
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GetFriendsCallbackProxy.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GetFriendsCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ModuleRelativePath"), TEXT("Classes/GetFriendsCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ToolTip"), TEXT("Called when there was an error retrieving the friends list"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ModuleRelativePath"), TEXT("Classes/GetFriendsCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ToolTip"), TEXT("Called when the friends list successfully was retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGetFriendsCallbackProxy(Z_Construct_UClass_UGetFriendsCallbackProxy, TEXT("UGetFriendsCallbackProxy"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGetFriendsCallbackProxy);
	UFunction* Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintGetRecentPlayersDelegate__DelegateSignature()
	{
		struct _Script_AdvancedSessions_eventBlueprintGetRecentPlayersDelegate_Parms
		{
			TArray<FBPOnlineRecentPlayer> Results;
		};
		UObject* Outer=Z_Construct_UPackage_AdvancedSessions();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BlueprintGetRecentPlayersDelegate__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_AdvancedSessions_eventBlueprintGetRecentPlayersDelegate_Parms));
			UProperty* NewProp_Results = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Results"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Results, _Script_AdvancedSessions_eventBlueprintGetRecentPlayersDelegate_Parms), 0x0000000008000182);
			UProperty* NewProp_Results_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Results, TEXT("Results"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FBPOnlineRecentPlayer());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/GetRecentPlayersCallbackProxy.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGetRecentPlayersCallbackProxy_GetAndStoreRecentPlayersList()
	{
		struct GetRecentPlayersCallbackProxy_eventGetAndStoreRecentPlayersList_Parms
		{
			UObject* WorldContextObject;
			FBPUniqueNetId UniqueNetId;
			UGetRecentPlayersCallbackProxy* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGetRecentPlayersCallbackProxy();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetAndStoreRecentPlayersList"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(GetRecentPlayersCallbackProxy_eventGetAndStoreRecentPlayersList_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GetRecentPlayersCallbackProxy_eventGetAndStoreRecentPlayersList_Parms), 0x0000000000000580, Z_Construct_UClass_UGetRecentPlayersCallbackProxy_NoRegister());
			UProperty* NewProp_UniqueNetId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetId"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetId, GetRecentPlayersCallbackProxy_eventGetAndStoreRecentPlayersList_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, GetRecentPlayersCallbackProxy_eventGetAndStoreRecentPlayersList_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedFriends"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/GetRecentPlayersCallbackProxy.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Gets the list of recent players from the OnlineSubsystem and returns it, can be retrieved later with GetStoredRecentPlayersList, can fail if no recent players are found"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGetRecentPlayersCallbackProxy_NoRegister()
	{
		return UGetRecentPlayersCallbackProxy::StaticClass();
	}
	UClass* Z_Construct_UClass_UGetRecentPlayersCallbackProxy()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UGetRecentPlayersCallbackProxy::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGetRecentPlayersCallbackProxy_GetAndStoreRecentPlayersList());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnFailure = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnFailure"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnFailure, UGetRecentPlayersCallbackProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintGetRecentPlayersDelegate__DelegateSignature());
				UProperty* NewProp_OnSuccess = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSuccess"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSuccess, UGetRecentPlayersCallbackProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintGetRecentPlayersDelegate__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UGetRecentPlayersCallbackProxy_GetAndStoreRecentPlayersList()); // 3488872542
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GetRecentPlayersCallbackProxy.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GetRecentPlayersCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ModuleRelativePath"), TEXT("Classes/GetRecentPlayersCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ToolTip"), TEXT("Called when there was an error retrieving the friends list"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ModuleRelativePath"), TEXT("Classes/GetRecentPlayersCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ToolTip"), TEXT("Called when the friends list successfully was retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGetRecentPlayersCallbackProxy(Z_Construct_UClass_UGetRecentPlayersCallbackProxy, TEXT("UGetRecentPlayersCallbackProxy"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGetRecentPlayersCallbackProxy);
	UFunction* Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintSendFriendInviteDelegate__DelegateSignature()
	{
		UObject* Outer=Z_Construct_UPackage_AdvancedSessions();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BlueprintSendFriendInviteDelegate__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/SendFriendInviteCallbackProxy.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USendFriendInviteCallbackProxy_SendFriendInvite()
	{
		struct SendFriendInviteCallbackProxy_eventSendFriendInvite_Parms
		{
			UObject* WorldContextObject;
			APlayerController* PlayerController;
			FBPUniqueNetId UniqueNetIDInvited;
			USendFriendInviteCallbackProxy* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USendFriendInviteCallbackProxy();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendFriendInvite"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SendFriendInviteCallbackProxy_eventSendFriendInvite_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, SendFriendInviteCallbackProxy_eventSendFriendInvite_Parms), 0x0000000000000580, Z_Construct_UClass_USendFriendInviteCallbackProxy_NoRegister());
			UProperty* NewProp_UniqueNetIDInvited = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueNetIDInvited"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UniqueNetIDInvited, SendFriendInviteCallbackProxy_eventSendFriendInvite_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FBPUniqueNetId());
			UProperty* NewProp_PlayerController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerController"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerController, SendFriendInviteCallbackProxy_eventSendFriendInvite_Parms), 0x0000000000000080, Z_Construct_UClass_APlayerController_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, SendFriendInviteCallbackProxy_eventSendFriendInvite_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedFriends"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/SendFriendInviteCallbackProxy.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Adds a friend who is using the defined UniqueNetId, some interfaces do now allow this function to be called (INCLUDING STEAM)"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_USendFriendInviteCallbackProxy_NoRegister()
	{
		return USendFriendInviteCallbackProxy::StaticClass();
	}
	UClass* Z_Construct_UClass_USendFriendInviteCallbackProxy()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = USendFriendInviteCallbackProxy::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_USendFriendInviteCallbackProxy_SendFriendInvite());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnFailure = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnFailure"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnFailure, USendFriendInviteCallbackProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintSendFriendInviteDelegate__DelegateSignature());
				UProperty* NewProp_OnSuccess = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSuccess"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSuccess, USendFriendInviteCallbackProxy), 0x0000000010080000, Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintSendFriendInviteDelegate__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USendFriendInviteCallbackProxy_SendFriendInvite()); // 1765481941
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SendFriendInviteCallbackProxy.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/SendFriendInviteCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ModuleRelativePath"), TEXT("Classes/SendFriendInviteCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ToolTip"), TEXT("Called when there was an error retrieving the friends list"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ModuleRelativePath"), TEXT("Classes/SendFriendInviteCallbackProxy.h"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ToolTip"), TEXT("Called when the friends list successfully was retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USendFriendInviteCallbackProxy(Z_Construct_UClass_USendFriendInviteCallbackProxy, TEXT("USendFriendInviteCallbackProxy"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USendFriendInviteCallbackProxy);
	UFunction* Z_Construct_UFunction_UUpdateSessionCallbackProxyAdvanced_UpdateSession()
	{
		struct UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms
		{
			UObject* WorldContextObject;
			TArray<FSessionPropertyKeyPair> ExtraSettings;
			int32 PublicConnections;
			int32 PrivateConnections;
			bool bUseLAN;
			bool bAllowInvites;
			bool bAllowJoinInProgress;
			bool bRefreshOnlineData;
			bool bIsDedicatedServer;
			UUpdateSessionCallbackProxyAdvanced* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUpdateSessionCallbackProxyAdvanced();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UpdateSession"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), 0x0000000000000580, Z_Construct_UClass_UUpdateSessionCallbackProxyAdvanced_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsDedicatedServer, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms, bool);
			UProperty* NewProp_bIsDedicatedServer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bIsDedicatedServer"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsDedicatedServer, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bIsDedicatedServer, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRefreshOnlineData, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms, bool);
			UProperty* NewProp_bRefreshOnlineData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bRefreshOnlineData"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRefreshOnlineData, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bRefreshOnlineData, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowJoinInProgress, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms, bool);
			UProperty* NewProp_bAllowJoinInProgress = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAllowJoinInProgress"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowJoinInProgress, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bAllowJoinInProgress, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowInvites, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms, bool);
			UProperty* NewProp_bAllowInvites = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAllowInvites"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowInvites, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bAllowInvites, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseLAN, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms, bool);
			UProperty* NewProp_bUseLAN = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bUseLAN"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseLAN, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bUseLAN, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), sizeof(bool), true);
			UProperty* NewProp_PrivateConnections = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PrivateConnections"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PrivateConnections, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), 0x0000000000000080);
			UProperty* NewProp_PublicConnections = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PublicConnections"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PublicConnections, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), 0x0000000000000080);
			UProperty* NewProp_ExtraSettings = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(ExtraSettings, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), 0x0000000008000182);
			UProperty* NewProp_ExtraSettings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ExtraSettings, TEXT("ExtraSettings"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSessionPropertyKeyPair());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, UpdateSessionCallbackProxyAdvanced_eventUpdateSession_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AutoCreateRefTerm"), TEXT("ExtraSettings"));
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Online|AdvancedSessions"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bAllowInvites"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bAllowJoinInProgress"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bIsDedicatedServer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bRefreshOnlineData"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bUseLAN"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_PrivateConnections"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_PublicConnections"), TEXT("100"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/UpdateSessionCallbackProxyAdvanced.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates a session with the default online subsystem with advanced optional inputs, you MUST fill in all categories or it will pass in values that you didn't want as default values"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UUpdateSessionCallbackProxyAdvanced_NoRegister()
	{
		return UUpdateSessionCallbackProxyAdvanced::StaticClass();
	}
	UClass* Z_Construct_UClass_UUpdateSessionCallbackProxyAdvanced()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage_AdvancedSessions();
			OuterClass = UUpdateSessionCallbackProxyAdvanced::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_UUpdateSessionCallbackProxyAdvanced_UpdateSession());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnFailure = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnFailure"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnFailure, UUpdateSessionCallbackProxyAdvanced), 0x0000000010080000, Z_Construct_UDelegateFunction_OnlineSubsystemUtils_EmptyOnlineDelegate__DelegateSignature());
				UProperty* NewProp_OnSuccess = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSuccess"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSuccess, UUpdateSessionCallbackProxyAdvanced), 0x0000000010080000, Z_Construct_UDelegateFunction_OnlineSubsystemUtils_EmptyOnlineDelegate__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UUpdateSessionCallbackProxyAdvanced_UpdateSession()); // 2730433465
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("UpdateSessionCallbackProxyAdvanced.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/UpdateSessionCallbackProxyAdvanced.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ModuleRelativePath"), TEXT("Classes/UpdateSessionCallbackProxyAdvanced.h"));
				MetaData->SetValue(NewProp_OnFailure, TEXT("ToolTip"), TEXT("Called when there was an error updating the session"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ModuleRelativePath"), TEXT("Classes/UpdateSessionCallbackProxyAdvanced.h"));
				MetaData->SetValue(NewProp_OnSuccess, TEXT("ToolTip"), TEXT("Called when the session was updated successfully"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUpdateSessionCallbackProxyAdvanced(Z_Construct_UClass_UUpdateSessionCallbackProxyAdvanced, TEXT("UUpdateSessionCallbackProxyAdvanced"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUpdateSessionCallbackProxyAdvanced);
	UPackage* Z_Construct_UPackage_AdvancedSessions()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/AdvancedSessions")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x3D8DCA80;
			Guid.B = 0xEC7E60A4;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

			Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintFindFriendSessionDelegate__DelegateSignature();
			Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintGetFriendsListDelegate__DelegateSignature();
			Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintGetRecentPlayersDelegate__DelegateSignature();
			Z_Construct_UDelegateFunction_AdvancedSessions_BlueprintSendFriendInviteDelegate__DelegateSignature();
		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
